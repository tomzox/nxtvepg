#!/usr/bin/perl
#
#  Perl script to convert POD manpage to help menu & popups
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License Version 2 as
#  published by the Free Software Foundation. You find a copy of this
#  license in the file COPYRIGHT in the root directory of this release.
#
#  THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL,
#  BUT WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
#  MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#
#  Description:
#
#    Reads the manpage in POD format and creates a Tcl/Tk script
#    that inserts command buttons to the help menu and defines the
#    texts for the help popups. The script will be compiled into the
#    executable and eval'ed upon program start.
#
#  Author: Tom Zoerner <Tom.Zoerner@informatik.uni-erlangen.de>
#
#  $Id: pod2help.pl,v 1.8 2000/12/30 23:08:00 tom Exp tom $
#

require "ctime.pl";

$started = 0;
$helpTitles = "";
$helpTexts = "";
$index = 0;

print "# This file is automatically generated - do not edit\n";
print "# Generated by $ARGV[0] from lindex $ARGV[1] at " . &ctime(time) . "\n";

print ".menubar.help insert 0 separator\n";

# process every text line of the manpage
while(1)
{
   $line = "";
   do
   {
      $_ = <>;
      last unless defined $_;
      chomp;
      $line .= "$_ ";
   } while (($_ ne "") || ($line eq ""));

   die "ran into EOF - where's section 'FILES'?" if ($line eq "");

   $line =~ s/\s\s+$//;

   if ($line =~ /^\=head1 (.*)/)
   {
      $title = $1;

      # skip UNIX manpage specific part
      if ($started || ($title eq "DESCRIPTION"))
      {
         if ($started)
         {
            #$chapter = "{$chapter}";
            $chapter =~ s/S<([^>]*)>/$1/g;
            $chapter =~ s/T<([^>]*)>/##$1##T##/g;
            $chapter =~ s/[IF]<([^>]*)>/##$1##I##/g;
            $chapter =~ s/L<"([^>]*)">/##$1##B##/g;
            $chapter =~ s/[BL]<([^>]*)>/##$1##B##/g;
            $chapter .= "####";
            $chapter =~ s/^#+//;

            # save the text of the last chapter
            #print $chapter;
            print "set helpTexts($index) {";
            while ($chapter =~ /([\x00-\xff]*?)##+(([IBT])#+)?/sg)
            {
               if    ($3 eq "B") { print "{$1} bold "; }
               elsif ($3 eq "I") { print "{$1} underlined "; }
               elsif ($3 eq "T") { print "{$1} title "; }
               elsif ($1 ne "")  { print "{$1} {} "; }
            }
            print "}\n";
            $index += 1;
         }

         # skip the last chapters
         if ($title eq "FILES")
         {
            last;
         }

         # initialize new chapter
         $started = 1;
         $title =~ s/^(.)(.*)/\u$1\L$2/;

         # append title to Help in the menubar
         print ".menubar.help insert $index command -label {$title} -command {PopupHelp $index}\n";

         # build array of chapter names for access from help buttons in popups
         print "set {helpIndex($title)} $index\n";

         # put chapter heading at the front of the chapter
         $chapter = "T<$title>\n";
      }
   }
   elsif ($line =~ /^\=over/)
   {
      $over = 1;
   }
   elsif ($line =~ /^\=back/)
   {
      $over = 0;
   }
   elsif ($line =~ /^\=item (.*)/)
   {
      $chapter .= "$1\n" if ($1 ne "*");
   }
   else
   {
      $chapter .= "$line\n" if ($line =~ /\S/);
   }
}

