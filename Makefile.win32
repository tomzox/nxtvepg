#
#  Windows Makefile for Nextview EPG decoder
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License Version 2 as
#  published by the Free Software Foundation. You find a copy of this
#  license in the file COPYRIGHT in the root directory of this release.
#
#  THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL,
#  BUT WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
#  MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#
#  Description:
#
#    Controls compilation of C and Tcl/Tk source to an executable on
#    Windows systems using gcc. This make file requires Cygwin and the
#    w32api and mingw header files.  In addition to nxtvepg, this
#    Makefile also generates the TV application simulator and tools.
#
#
#  Author: Tom Zoerner
#
#  $Id: Makefile.win32,v 1.78 2011/01/06 11:35:25 tom Exp tom $
#

ifeq ($(OS),Windows_NT)
# compiling on WinNT in Cygwin environment
INCS   += -I. -I/usr/include/mingw
ROOT    = /cygdrive/d
CC      = gcc
CPP     = g++
LD      = g++
AS      = as
NM      = nm
WINDRES = windres
DLLTOOL = dlltool
else
# cross-compiling for win32 on UNIX host (requires "gcc-win" package)
INCS   += -DNONAMELESSUNION
INCS   += -I.
INCS   += -I/usr/i586-mingw32msvc/include

GCC_ROOT = /usr/i586-mingw32msvc
AR      = $(GCC_ROOT)/bin/ar
AS      = $(GCC_ROOT)/bin/as
NM      = $(GCC_ROOT)/bin/nm
WINDRES = /usr/bin/i586-mingw32msvc-windres
DLLTOOL = $(GCC_ROOT)/bin/dlltool
STRIP   = i586-mingw32msvc-strip
#ROOT    = $(HOME)/Save/dos
ROOT    = /home/tom/Save/dos
CC      = i586-mingw32msvc-gcc
CPP     = i586-mingw32msvc-g++
LD      = i586-mingw32msvc-g++
endif

# if you have perl and/or flex set their path here, else just leave them alone
PERL    = /usr/bin/perl
FLEX    = /usr/bin/flex

# path to the non-Cygwin Tcl/Tk package
TCLDIR  = $(ROOT)/gnu/tcl85
INCS   += -I$(TCLDIR)/include
TCL_V   = 8.5.6
TCL_L   = 85

GUILIBS += -L$(BUILD_DIR) -ltk$(TCL_L) -ltcl$(TCL_L)
ACQLIBS += -lws2_32
ACQLIBS += -L$(BUILD_DIR)/dsdrv -ltvcard -ldsdrv

# define this if you don't want to load external Tcl/Tk init scripts
DEFS   += -DUSE_PRECOMPILED_TCL_LIBS
# define this if you have patched nxtvepg.ico into the tk DLL
DEFS   += -DICON_PATCHED_INTO_DLL
# enable use of multi-threading (UNIX only)
#DEFS   += -DUSE_THREADS
# enable use of daemon and client/server connection (UNIX only)
DEFS   += -DUSE_DAEMON
# enable if you have both 32-bit and 64-bit systems
#DEFS   += -DUSE_32BIT_COMPAT
# testing TV app interaction on a host without a TV card
#DEFS   += -DWITHOUT_TVCARD
# use UTF-8 internally instead of Latin-1 (EXPERIMENTAL)
#DEFS   += -DUSE_UTF8 -DXMLTV_OUTPUT_UTF8
# enable support for importing XMLTV files
DEFS   += -DUSE_XMLTV_IMPORT
# enable support for teletext EPG grabber (EXPERIMENTAL)
DEFS    += -DUSE_TTX_GRABBER
ACQLIBS += -Lboost -lboost_regex-gcc-d-1_42

DEFS   += -DWIN32

WARN    = -Wall -Wpointer-arith -Wnested-externs -Wmissing-prototypes
WARN   += -Wno-pointer-sign
WARN   += -Werror
#WARN  += -Wstrict-prototypes
CFLAGS  = -pipe $(WARN) $(INCS) $(DEFS) -g -O2 -mno-cygwin
CPPFLAGS = -pipe $(INCS) $(DEFS) -g -O2 -mno-cygwin
LDFLAGS = -mwindows -mno-cygwin -Wl,--subsystem,windows
LDFLAGS_CONSOLE = -mconsole -mno-cygwin -Wl,--subsystem,console

BUILD_DIR  = build-win32
INCS      += -I$(BUILD_DIR)

# FIXME required for O2
$(BUILD_DIR)/epgui/rcfile.o : CFLAGS += -fno-strict-aliasing

# ----- don't change anything below ------------------------------------------

SUBDIRS = epgvbi epgdb epgctl epgui epgtcl tvsim dsdrv xmltv epgttx

EPGSRC  = epgvbi/btdrv4win epgvbi/vbidecode epgvbi/zvbidecoder \
          epgvbi/ttxdecode epgvbi/hamming epgvbi/cni_tables epgvbi/tvchan \
          epgvbi/syserrmsg epgvbi/winshmsrv \
          epgdb/epgstream epgdb/epgaifrag epgdb/epgdbmerge epgdb/epgdbsav \
          epgdb/epgdbmgmt epgdb/epgdbif epgdb/epgdbfil epgdb/epgblock \
          epgdb/epgnetio epgdb/epgqueue epgdb/epgtscqueue epgdb/ttxgrab \
          epgctl/debug epgctl/epgacqctl epgctl/epgacqnxt epgctl/epgacqttx \
          epgctl/epgscan epgctl/epgctxctl epgctl/epgctxmerge \
          epgctl/epgacqclnt epgctl/epgacqsrv
XMLSRC  = xmltv/xml_prolog.tab xmltv/xml_scan.yy xmltv/xml_cdata \
          xmltv/xml_hash xmltv/xmltv_tags xmltv/xmltv_db xmltv/xmltv_cni \
          xmltv/xmltv_timestamp xmltv/xmltv_themes xmltv/xmltv_main
TTXSRC  = epgttx/ttx_scrape epgttx/ttx_date epgttx/ttx_ov_fmt \
          epgttx/ttx_feat epgttx/ttx_pg_ref epgttx/ttx_db epgttx/ttx_util \
          epgttx/ttx_xmltv epgttx/ttx_cif
GUISRC  = epgui/uictrl epgui/pibox epgui/pilistbox epgui/pinetbox \
          epgui/pidescr epgui/pioutput epgui/pifilter epgui/piremind \
          epgui/statswin epgui/timescale epgui/pdc_themes epgui/menucmd \
          epgui/epgmain epgui/loadtcl epgui/wintv epgui/wintvcfg \
          epgui/wintvui epgui/epgsetup epgui/cmdline epgui/rcfile \
          epgui/dumptext epgui/dumpraw epgui/dumphtml epgui/dumpxml \
          epgui/uidump epgui/epgquery epgui/shellcmd epgui/wmhooks \
          epgui/daemon
CLDSRC  = epgui/daemon_main epgui/daemon epgui/epgsetup epgui/cmdline \
          epgui/rcfile epgui/wintvcfg epgui/dumptext epgui/dumpxml \
          epgui/dumpraw epgui/pidescr epgui/pdc_themes epgui/epgquery
TCLSRC  = epgtcl/mainwin epgtcl/dlg_hwcfg epgtcl/dlg_xawtvcf \
          epgtcl/dlg_ctxmencf epgtcl/dlg_acqmode epgtcl/dlg_netsel \
          epgtcl/dlg_dump epgtcl/dlg_netname epgtcl/dlg_udefcols \
          epgtcl/shortcuts epgtcl/dlg_shortcuts epgtcl/draw_stats \
          epgtcl/dlg_filter epgtcl/dlg_substr epgtcl/dlg_remind \
          epgtcl/dlg_prov epgtcl/rcfile epgtcl/helptexts epgtcl/helptexts_de \
          epgtcl/mclistbox epgtcl/combobox epgtcl/rnotebook epgtcl/htree
TCLLSRC = epgtcl/tcl_libs epgtcl/tk_libs epgtcl/ttk_libs

DSDRV_CSRC    = dsdrv/dsdrv34 dsdrv/hwdrv dsdrv/hwpci dsdrv/hwmem dsdrv/debuglog
TVCARD_CSRC   = dsdrv/bt8x8 dsdrv/bt8x8_i2c dsdrv/bt8x8_typ \
                dsdrv/saa7134 dsdrv/saa7134_i2c dsdrv/saa7134_typ \
                dsdrv/cx2388x dsdrv/cx2388x_typ dsdrv/wintuner \
                dsdrv/cfg_parse dsdrv/wintuner_typ
TVSIM_CSRC    = tvsim/tvsim_main tvsim/winshmclnt
TVSIM_CSRC2   = epgvbi/btdrv4win epgvbi/tvchan epgvbi/vbidecode epgvbi/zvbidecoder \
                epgvbi/ttxdecode epgvbi/hamming epgvbi/cni_tables epgvbi/syserrmsg \
                epgctl/debug epgui/pdc_themes epgui/wintvcfg epgui/wintvui \
                epgui/rcfile
TVSIM_TCLSRC  = tvsim/tvsim_gui
VBIREC_CSRC   = tvsim/vbirec_main
VBIREC_CSRC2  = epgvbi/winshmsrv epgvbi/cni_tables epgvbi/hamming epgctl/debug
VBIREC_TCLSRC = tvsim/vbirec_gui epgtcl/combobox
VBIPLAY_CSRC  = tvsim/vbiplay
VBIPLAY_CSRC2 = tvsim/winshmclnt epgctl/debug

TCL_TK_LIBS   = $(BUILD_DIR)/libtcl$(TCL_L).a $(BUILD_DIR)/libtk$(TCL_L).a
TCL_SLIBS     = $(addprefix $(BUILD_DIR)/, $(addsuffix .o, $(TCLLSRC)))

NXTV_OBJS     = $(addprefix $(BUILD_DIR)/, $(addsuffix .o, $(EPGSRC) $(GUISRC) $(TCLSRC))) \
                $(TCL_SLIBS) $(BUILD_DIR)/epgui/tkwinico.res.o
DAEMON_OBJS   = $(addprefix $(BUILD_DIR)/, $(addsuffix .o, $(EPGSRC) $(CLDSRC))) \
                $(BUILD_DIR)/epgui/tkwinico.res.o
DSDRV_OBJS    = $(addprefix $(BUILD_DIR)/, $(addsuffix .o, $(DSDRV_CSRC)))
TVCARD_OBJS   = $(addprefix $(BUILD_DIR)/, $(addsuffix .o, $(TVCARD_CSRC)))
TVSIM_OBJS    = $(addprefix $(BUILD_DIR)/, $(addsuffix .o, $(TVSIM_CSRC) $(TVSIM_CSRC2) $(TVSIM_TCLSRC))) $(TCL_SLIBS)
VBIREC_OBJS   = $(addprefix $(BUILD_DIR)/, $(addsuffix .o, $(VBIREC_CSRC) $(VBIREC_CSRC2) $(VBIREC_TCLSRC))) $(TCL_SLIBS)
VBIPLAY_OBJS  = $(addprefix $(BUILD_DIR)/, $(addsuffix .o, $(VBIPLAY_CSRC) $(VBIPLAY_CSRC2)))

ifneq (,$(findstring USE_XMLTV_IMPORT,$(DEFS)))
NXTV_OBJS    += $(addprefix $(BUILD_DIR)/, $(addsuffix .o, $(XMLSRC)))
DAEMON_OBJS  += $(addprefix $(BUILD_DIR)/, $(addsuffix .o, $(XMLSRC)))
endif
ifneq (,$(findstring USE_TTX_GRABBER,$(DEFS)))
NXTV_OBJS    += $(addprefix $(BUILD_DIR)/, $(addsuffix .o, $(TTXSRC)))
DAEMON_OBJS  += $(addprefix $(BUILD_DIR)/, $(addsuffix .o, $(TTXSRC)))
endif

.PHONY: devel daemon manuals tvsim tvmans all
devel   :: build_dir tcl_headers $(BUILD_DIR)/nxtvepg.exe manuals
daemon  :: build_dir tcl_headers $(BUILD_DIR)/nxtvepgd.exe manuals
manuals :: nxtvepg.1 nxtvepgd.1 manual.html manual-de.html
tvsim   :: build_dir tcl_headers_tvsim $(BUILD_DIR)/tvsim.exe $(BUILD_DIR)/vbirec.exe $(BUILD_DIR)/vbiplay.exe tvmans
tvmans  :: tvsim/tvsim.html tvsim/vbirec.html tvsim/vbiplay.html
all     :: devel daemon tvsim tvmans verifyxml

$(BUILD_DIR)/nxtvepg.exe: $(BUILD_DIR)/dsdrv/libdsdrv.a $(BUILD_DIR)/dsdrv/libtvcard.a $(NXTV_OBJS) $(TCL_TK_LIBS)
	$(LD) $(LDFLAGS) $(NXTV_OBJS) $(GUILIBS) $(ACQLIBS) -o $@

$(BUILD_DIR)/nxtvepgd.exe: $(BUILD_DIR)/dsdrv/libdsdrv.a $(BUILD_DIR)/dsdrv/libtvcard.a $(DAEMON_OBJS)
	$(LD) $(LDFLAGS) $(DAEMON_OBJS) $(ACQLIBS) -o $@

$(BUILD_DIR)/tvsim.exe: $(BUILD_DIR)/dsdrv/libdsdrv.a $(BUILD_DIR)/dsdrv/libtvcard.a $(TVSIM_OBJS) $(TCL_TK_LIBS)
	$(LD) $(LDFLAGS) $(TVSIM_OBJS) $(GUILIBS) $(ACQLIBS) -o $@

$(BUILD_DIR)/vbirec.exe: $(VBIREC_OBJS) $(TCL_TK_LIBS)
	$(LD) $(LDFLAGS) $(VBIREC_OBJS) $(GUILIBS) $(ACQLIBS) -o $@

$(BUILD_DIR)/vbiplay.exe: $(VBIPLAY_OBJS)
	$(LD) $(LDFLAGS) $(VBIPLAY_OBJS) $(GUILIBS) $(ACQLIBS) -o $@

$(BUILD_DIR)/dsdrv/libdsdrv.a: $(DSDRV_OBJS)
	$(AR) r $(BUILD_DIR)/dsdrv/libdsdrv.a $(DSDRV_OBJS)

$(BUILD_DIR)/dsdrv/libtvcard.a: $(TVCARD_OBJS)
	$(AR) r $(BUILD_DIR)/dsdrv/libtvcard.a $(TVCARD_OBJS)

.SUFFIXES: .cc .c .o .tcl

$(BUILD_DIR)/%.o: %.cc
	$(CPP) $(CPPFLAGS) -Wp,-MMD,$@.dep.tmp -c -o $@ $<
	@sed -e "s#^[^ \t].*\.o:#$@:#" < $@.dep.tmp > $@.dep && \
	   rm -f $@.dep.tmp

$(BUILD_DIR)/%.o: %.c | tcl_headers tcl_headers_tvsim
	$(CC) $(CFLAGS) -Wp,-MMD,$@.dep.tmp -c -o $@ $<
	@sed -e "s#^[^ \t].*\.o:#$@:#" < $@.dep.tmp > $@.dep && \
	   rm -f $@.dep.tmp

$(BUILD_DIR)/%.c: %.tcl $(BUILD_DIR)/tcl2c.exe
	$(BUILD_DIR)/tcl2c.exe -c -d -h -p $(BUILD_DIR) $*.tcl

# rule for tcl files which resides in the build tree (e.g. tcl_libs.tcl)
%.c: %.tcl $(BUILD_DIR)/tcl2c.exe
	$(BUILD_DIR)/tcl2c.exe -c -d -h $*.tcl

# %.h rule disabled because tcl2c doesn't update timestamp of generated headers
# unless they changed, to avoid excessive re-compilation after internal script
# changes. note: this also requires to add a rule for all .tcl sources in front
# of objects and depend targets to make sure all headers are already generated
# when required, since there's no rule to generate them from Tcl scripts.
#
%.h: %.tcl tcl2c.exe
	@if [ ! -e epgtcl/dlg_remind.h ] ; then \
	  echo "Appearently you typed 'make nxtvepg'" ; \
	  echo "Don't do that. Instead use simply 'make'" ; \
          false ; \
	fi

.SUFFIXES: .yy .lex

#%.tab.c: %.yy
#	yacc -d -v -b $(basename $<) $<

%.yy.c: %.lex
	@if test -x $(FLEX); then \
	  $(FLEX) -o$@ $< ; \
	elif test -f $<; then \
	  touch $< ; \
	else \
	  echo "ERROR: cannot generate $< without $(FLEX)" ; \
	  false; \
	fi

.PHONY: verifyxml parsexmltv
# standalone XML parser for validation purposes
XMLVERISRC = xmltv/xml_prolog.tab xmltv/xml_scan.yy xmltv/xml_verify \
             xmltv/xml_cdata xmltv/xml_hash epgctl/debug
XMLVERIOBJ  = $(addprefix $(BUILD_DIR)/, $(addsuffix .o, $(XMLVERISRC)))
$(BUILD_DIR)/verifyxml : $(XMLVERIOBJ)
	$(CC) -o $@ $(XMLVERIOBJ) $(LDFLAGS_CONSOLE)
verifyxml : $(BUILD_DIR)/verifyxml

# standalone XMLTV processor for performance tests
# note: requires uncommenting main() in source module xmltv_db
XMLTESTSRC  = $(XMLSRC) $(EPGSRC) epgui/pidescr epgui/pdc_themes
XMLTESTOBJ  = $(addprefix $(BUILD_DIR)/, $(addsuffix .o, $(XMLTESTSRC)))
$(BUILD_DIR)/parsexmltv : $(XMLTESTOBJ)
	$(CC) -o $@ $(XMLTESTOBJ) $(LDFLAGS) $(ACQLIBS)
parsexmltv : $(BUILD_DIR)/parsexmltv

.PHONY: tcl_headers tcl_headers_tvsim
tcl_headers:       $(addprefix $(BUILD_DIR)/, $(addsuffix .c, $(TCLSRC)))
tcl_headers_tvsim: $(addprefix $(BUILD_DIR)/, $(addsuffix .c, $(TVSIM_TCLSRC) $(VBIREC_TCLSRC)))

$(BUILD_DIR)/tcl2c.exe: tcl2c.c
ifeq ($(OS),Windows_NT)
	$(CC) -O6 -o $(BUILD_DIR)/tcl2c.exe tcl2c.c
else
	gcc -O6 -o $(BUILD_DIR)/tcl2c.exe tcl2c.c
endif

$(BUILD_DIR)/epgtcl/tcl_libs.tcl:
	if test -d tcl$(TCL_V); then \
	  cat tcl$(TCL_V)/*.tcl > $(BUILD_DIR)/epgtcl/tcl_libs.tcl; \
	else \
	  echo "Tcl init scripts not found - abort."; \
	  false; \
	fi

$(BUILD_DIR)/epgtcl/tk_libs.tcl:
	if test -d tk$(TCL_V); then \
	  cat tk$(TCL_V)/*.tcl > $(BUILD_DIR)/epgtcl/tk_libs.tcl; \
	else \
	  echo "Tk init scripts not found - abort."; \
	  false; \
	fi

$(BUILD_DIR)/epgtcl/ttk_libs.tcl:
	if test -d tk$(TCL_V); then \
	  cat tk$(TCL_V)/*.tcl > $(BUILD_DIR)/epgtcl/ttk_libs.tcl; \
	else \
	  echo "Ttk init scripts not found - abort."; \
	  false; \
	fi

epgui/loadtcl.c :: $(addprefix $(BUILD_DIR)/, $(addsuffix .c, $(TCLLSRC)))

$(BUILD_DIR)/epgui/tkwinico.res.o: epgui/tkwinico.rc
	$(WINDRES) -o $(BUILD_DIR)/epgui/tkwinico.res.o epgui/tkwinico.rc

#
# Rules to recover linker libraries for Tcl/tk from .def and .dll
#
$(BUILD_DIR)/libtcl$(TCL_L).a: tcl$(TCL_L).dll libtcl$(TCL_L).def
	$(DLLTOOL) --as=$(AS) --def libtcl$(TCL_L).def --dllname tcl$(TCL_L).dll --output-lib $@

$(BUILD_DIR)/libtk$(TCL_L).a: tk$(TCL_L).dll libtk$(TCL_L).def
	$(DLLTOOL) --as=$(AS) --def libtk$(TCL_L).def --dllname tk$(TCL_L).dll --output-lib $@

#
# Rules to generate .def files from Tcl/Tk linker libraries
# - .def files are included with releases, so these rules should be commented out for distribution
#
#libtcl$(TCL_L).def: $(TCLDIR)/lib/libtcl$(TCL_L).a
#	@echo EXPORTS > $@
#	$(NM) $(TCLDIR)/lib/libtcl$(TCL_L).a | \
#	  egrep '^(........|................) [T] _' | sed 's/[^_]*_//' >> $@
#
#libtk$(TCL_L).def: $(TCLDIR)/lib/libtk$(TCL_L).a
#	@echo EXPORTS > $@
#	$(NM) $(TCLDIR)/lib/libtk$(TCL_L).a | \
#	  egrep '^(........|................) [T] _' | sed 's/[^_]*_//' >> $@

libtcl$(TCL_L).def libtk$(TCL_L).def:
	@echo "Tcl/Tk library .def files are missing - release is incomplete"
	@false

.PHONY: zip bak
zip: all
	@EPG_VERSION_STR=`egrep '[ \t]*#[ \t]*define[ \t]*EPG_VERSION_STR' epgctl/epgversion.h | head -2 | tail -1 | sed -e 's#.*"\(.*\)".*#\1#'`; \
	ARCHIVE=$(BUILD_DIR)/nxtvepg-$${EPG_VERSION_STR}-win.zip; \
	echo Packing $$ARCHIVE; \
	rm -f $$ARCHIVE; \
	$(STRIP) $(BUILD_DIR)/nxtvepg.exe; \
	$(STRIP) $(BUILD_DIR)/nxtvepgd.exe; \
	zip -9 -j $$ARCHIVE $(BUILD_DIR)/nxtvepg.exe $(BUILD_DIR)/nxtvepgd.exe; \
	zip -9 $$ARCHIVE tcl$(TCL_L).dll tk$(TCL_L).dll NextViewPlugin.dll dsdrv4.sys dsdrv4.vxd nxtvepg.ico; \
	zip -9 $$ARCHIVE -l manual.html manual-de.html Nxtvepg.ad \
	                    xmltv-etsi.map; \
	zip -9 -j $$ARCHIVE dsdrv/CX2388xCards.ini dsdrv/SAA713xCards.ini; \
	for v in TODO README CHANGES COPYRIGHT; do \
	   mv $$v $${v}.txt; \
	   zip -9 -l $$ARCHIVE $${v}.txt; \
	   mv $${v}.txt $$v; \
	done; \
	zip -0 $$ARCHIVE images/*.png; \
	ARCHIVE=$(BUILD_DIR)/nxtvepg-$${EPG_VERSION_STR}-tvsim.zip; \
	echo Packing $$ARCHIVE; \
	rm -f $$ARCHIVE; \
	$(STRIP) $(BUILD_DIR)/tvsim.exe $(BUILD_DIR)/vbirec.exe $(BUILD_DIR)/vbiplay.exe; \
	zip -j -9 $$ARCHIVE $(BUILD_DIR)/tvsim.exe $(BUILD_DIR)/vbirec.exe $(BUILD_DIR)/vbiplay.exe; \
	zip -j -9 -l $$ARCHIVE tvsim/tvsim.html tvsim/vbirec.html tvsim/vbiplay.html; \
	mv COPYRIGHT COPYRIGHT2.txt; \
	zip -9 -l $$ARCHIVE COPYRIGHT2.txt; \
	mv COPYRIGHT2.txt COPYRIGHT

bak:
	cd .. && tar cf /c/winpc.tar pc -X pc/tar-ex-win

.PHONY: build_dir
build_dir:
	@mkdir -p $(addprefix $(BUILD_DIR)/,$(SUBDIRS))

# include dependencies (each object has one dependency file)
-include $(BUILD_DIR)/*/*.dep

# end Windows specific part / note more rules follow in UNIX Makefile
