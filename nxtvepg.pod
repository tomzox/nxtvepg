# ---------------------------------------------------------------------------
#
#  nxtvepg online manual
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License Version 2 as
#  published by the Free Software Foundation. You find a copy of this
#  license in the file COPYRIGHT in the root directory of this release.
#
#  THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL,
#  BUT WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
#  MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#
#  Description:
#
#    User's documentation in Perl "POD" format. The content is
#    converted into various other formats by use of different scripts:
#    UNIX manpage by pod2man; HTML web page by pod2html (needs manual
#    adjustments) and the online help by a self-made script. The releases
#    should contain the converted files, so that the user is not forced
#    to install Perl.
#
#  Author: Tom Zoerner
#
# $Id: nxtvepg.pod,v 1.137 2020/06/15 17:35:09 tom Exp tom $
# ---------------------------------------------------------------------------

=head1 NAME

nxtvepg - Browsing EPG data in XMLTV files and grabbing EPG from teletext

=head1 SYNOPSIS

B<nxtvepg> S<[ options ]> S<[ XMLTV_files ... ]>

B<nxtvepgd> S<[ daemon options ]>

=head1 DESCRIPTION

B<nxtvepg>
is a X11 and Win32 application for browsing EPG data in files in XMLTV
format. Using a TV capture card, EPG data can additionally be grabbed from
TV schedule tables on teletext pages.

B<nxtvepgd>
is a stripped-down version of nxtvepg which only performs EPG data
acquisition from a TV capture card as a background daemon process.
EPG data is written to files in XMLTV format, which can later be used
by the nxtvepg GUI.

New users of the software are encouraged to start reading at chapter
L<"GETTING STARTED"> for setting up EPG acquisition from teletext.
If you do not plan to use that feature, skip forward to chapter
L<"BASIC BROWSING">.

=head1 OPTIONS

The I<XMLTV_files ...> parameters on the command line can be one or more
files in XMLTV format. If more than one file is given, the contents are
merged in the way described for L<"MERGED DATABASES">. The EPG data in
the respective files will then be loaded and shown in the GUI.

Summary of command line options:

=over 4

=item B<-display> I<display>

UNIX only: The display on which the user interface will be placed,
for example B<localhost:0.0>.
Default: taken from environment variable I<DISPLAY>.
For more info see the I<X> manual page section B<Display Names>

=item B<-tvdisplay> I<display>

UNIX only: The display on which the TV application window is searched,
e.g. on a remote host or different screen on a station with multiple
monitors.  Default: same as the main window's display.

=item B<-geometry> I<geometry>

Specifies the position of the main window, e.g.  B<-geometry -0+0>
to put the main window in the upper right corner of the visible screen.
The size of the window cannot be changed.

=item B<-iconic>

Start with the main window iconified (i.e. minimized).

For M$ Windows users this option may be esp. helpful when nxtvepg is
started from inside the I<Auto start> group and I<Hide on minimize> is
enabled: nxtvepg then will start almost invisibly in the background,
only with an icon in the system tray of the task bar
(see also L<"CONFIGURATION">, section "Show/Hide").

=item B<-rcfile> I<path>

Specify an alternate configuration file.
Default: on UNIX F<$HOME/.config/nxtvepg/nxtvepgrc>,
on Windows nxtvepg.ini in the current directory.

=item B<-dbdir> I<directory>

Specify an alternate directory for XMLTV files written by the Teletext EPG
grabber. Default: On UNIX F<$HOME/.cache/nxtvepg>, on Windows the current
directory.

Note that the database management is not equipped for concurrent writing.
Therefore, when running multiple instances of nxtvepg concurrently, use
this option for selecting different storage directories.

If you are using an acquisition daemon, the browser must be configured
to use the same directory as the daemon.  If the daemon is running on
a different host, you need to mount the remote directory, e.g. via NFS.

=item B<-card> I<index>

Specify which TV card hardware to use, if you have more than card.
Default: index 0.
On Linux the given index is appended to the device names,
i.e. F</dev/vbi> and F</dev/video> (see also L<"FILES">).
On Windows index "n" means the n-th card found while scanning the PCI
bus for cards with a supported capture chip (e.g. Brooktree Bt878, Bt878A,
Bt848, Bt849, Philips SAA7134, Conexant 23881).  If you have more
than one TV card with the same chip, the order between those is undefined,
but still constant (i.e. the order is determined by the driver, not nxtvepg)

=item B<-noacq>

Start with acquisition disabled.
The acquisition can still be started later from the Control menu
(see L<"CONTROL: Enable acquisition">).

=item B<-daemon>

Start without graphical user interface and silently perform acquisition
"in the background."  This option is implied when running I<nxtvepgd>.
(The daemon-only executable is slightly more efficient since it's smaller
and uses less libraries than the GUI executable and hence needs less memory.)

If no other options are given the same acquisition mode as configured with
the GUI will be used. The I<-daemon> option cannot be combined with
I<-noacq>, I<-remctrl>, or other GUI-specific options.

The daemon always creates a named socket in the I</tmp> directory (UNIX only)
plus optionally a TCP/IP socket to allow connects by browser processes. While
connected, the browser is notified whenever the teletext EPG grabber updates
an XMLTV file; if left unconnected, the browser listing might remain incomplete
or outdated.

It's important to note that the browser B<must use> the same database
directory (see option I<-dbdir>), because the daemon forwards only deltas to
the database files stored in that directory. For more details see
L<"CONFIGURATION">, section "Client/Server".

UNIX
warning: for security reasons it's depreciated to run the daemon with root
privileges, because nxtvepg has not been reviewed yet for possible exploits.
If you want to start the daemon already during system startup, you should
use su(1). Also note that you'll probably need to specify I<-rcfile> and
I<-dbdir> because the F<$HOME> environment variable might not be (correctly)
defined.  Example:

   su nobody -c "/usr/local/bin/nxtvepg -daemon \
                 -rcfile /usr/local/etc/nxtvepgrc"

For terminating the daemon process, see the -daemonstop option below.
Alternatively you can stop the daemon via the graphical user interface by
disabling I<enable acquisition> in the control menu.

=item B<-daemonstop>

With this option, a background acquisition process is searched and
terminated if found; then the program exits. Note you need permission
to send signals to the daemon process to be able to stop it (i.e. it
must run with the same user ID).  This option is meant to allow
controlling acquisition by scripts which start and stop acquisition
automatically after a given time.

Note if the daemon is running on the same host and uid, it can
also be stopped by deselecting I<Enable acquisition> in the I<Control>
menu while being connected to the daemon.
For more details see L<"CONTROL"> and L<"FILES">.

=item B<-daemonquery>

With this option, the acquisition status of a running nxtvepg daemon
is retrieved and printed to the terminal. This can be used to determine
the current status without use of the graphical user interface. This
can also be used by shell scripts to control the acquisition process.
The output is written to I<stdout> unless you redirect it into a file
or pipe it into another program. See also option I<-outfile>. Possible
errors are reported to I<stderr> as usual.

Note you can query the daemon directly without use of a nxtvepg
client by connecting to the host and port where the daemon accepts
client connections and send the string "\x00\x11\x00\x00ACQSTAT". The
daemon will reply with a 4-byte header followed by a variable-length
string: The first two header bytes specify the message length including
header in beg-endian binary format; the next two bytes are two and zero;
the remaining bytes are the message text. Example script implemented in
the I<Tcl> programming language:

   #!/usr/bin/tclsh
   if {[catch {set sock_fd [socket localhost 7658]} err] == 0} {
      fconfigure $sock_fd -buffering none -encoding binary
      puts -nonewline $sock_fd [binary format Scxa7 11 0 ACQSTAT]
      set line [read $sock_fd 4]
      binary scan $line "Scx" len type
      set line [read $sock_fd [expr {$len - 4}]]
      binary scan $line "a*" msg
      puts -nonewline $msg
   } else {
      puts stderr "Failed to connect to daemon ($err)"
   }

=item B<-nodetach>

UNIX only:
In daemon mode this option prevents the process actually making itself a
daemon, i.e. it doesn't fork and stays connected to the terminal. Also
all log messages starting with level I<warning>
are sent to standard error out (e.g. configuration errors that lead to
an immediate exit).  This mode is intended for debugging purposes only.

=item B<-acqpassive>

In daemon mode this option overrides the acquisition mode setting in
the configuration file and forces acquisition into passive mode (see
L<"DATA ACQUISITION">).  The configuration file is not changed, so that
you can use different acquisition strategies for daemon and GUI.

=item B<-acqonce> I<phase>

In daemon mode this option will automatically stop acquisition and
terminate the daemon after the given phase has been completed. Phases
are as defined in L<"DATA ACQUISITION">, namely I<now> or I<full>.

If you want to run another program from inside a script after nxtvepg
has finished, use the I<-nodetach> option (UNIX only)  Then the
shell which is processing the script will usually wait for nxtvepg
to terminate before starting the next command.  On Windows there's
no simple way to achieve this (because non-console applications
are always run in the background), so you need to use a script
language which supports instructions which wait until a running
program (namely nxtvepg) has finished.

=item B<-dump> I<mode>

When started with this argument, nxtvepg will only export the entire
programme database, then exit.  An XML file has to be specified on
the command line, as this data will be exported.

To export the database in XML format, use keyword I<xml> as mode.
In this case the last time format which was used
via the XMLTV export dialog is used.  To export the database in a
specific format, use I<xml5utc> or I<xml5ltz>.  For more details see
L<"CONTROL: Export as XMLTV">.  Note by default this mode exports
the complete database, including already expired programmes and
networks which are suppressed in the GUI. To filter the output,
use option B<-epgquery>.

To export programme data into a HTML document, use keyword I<html>
as mode.  The same options as configured in the HTML export dialog
are applied (unless you are using the daemon executable I<nxtvepgd> 
to perform the export.) For details see L<"CONTROL: Export as HTML">.
The number of exported programmes can be limited by adding a number
after the keyword, separated by a colon (e.g. C<-dump html:50>.)
However the format of the programme list is currently not configurable
via command line options.

To export the database into a plain text file (e.g. for import into an
SQL database) three mode keywords are supported:
I<pi> to dump programmes (i.e. the complete TV schedules),
I<ai> to dump the content provider's network table,
I<pdc> to dump the PDC theme categories table.
For more details see L<"CONTROL: Export as text">.

For debugging purposes there's also a mode I<raw> which prints all data
in the database in a format which is closely related to the internal
data structures.  This output should not be used for data export.
For more details see L<"CONTROL: Dump raw database">.

The output is written to I<stdout> unless you redirect it into a file
or pipe it into another program. See also option I<-outfile>

=item B<-outfile> I<path>

This option allows to redirect output from I<-dump> or any other
modes which print to I<stdout> by default. It also works in normal
operation modes, but the created file will be empty.
nxtvepg will abort if the specified file already exists to avoid
inadvertantly overwriting other files.  If you're using the option
inside a script or batch file you should add a command to remove
the target file before invoking nxtvepg.

This option is especially helpful for M$ Windows users, since output
written to I<stdout> is discarded by the operating system because
nxtvepg is not a "console application".  This means for exmaple, if
output of the above -dump mode is not to be discarded, you must
either use this option or redirect output as explained below.

Note: instead of using this option you can also redirect output with
the ">" or "|" operators in UNIX shells or under M$ Windows at the
MS-DOS command prompt.  For example you could use either of the
following:

  nxtvepg -dump ai tv.xml > networks.txt
  nxtvepg -dump ai tv.xml | more

to either write the network table of XMLTV file "tv.xml" into a file named
I<networks.txt>, or pipe it to the paging program "more" respectively.

=item B<-epgquery> I<FILTER=option>

This option can be used in combination with B<-dump> to limit the
amount of programmes which is exported. The option can be used
multiple times to combine different filters. The available filter
types are a subset of those which are available in the graphical
interface:

=over 4

=item I<EXPIRE=NOW> or I<EXPIRE=delay> or I<EXPIRE=time>

This command with parameter value I<NOW> will only list programmes which
are currently running or starting in the future. In other words, programmes
which have already finished are suppressed. Alternatively, the parameter
can be a numeric value which specifies a number of minutes up to which
the stop time may be in the past; alternatively the value may specify
a date and time in the format C<YYYY-MM-DD.HH:MM> or just a time in format
C<HH:MM>. The latter always refers to the current date.

=item I<PROGIDX=index_range>

This command is another possibility to restrict the listing to unexpired
programmes. With this command for each network the programmes with the
given index or within the given index range are listed. The index zero
refers to the currently running programme on each channel. (When none
is currently running, index 1 refers to the one which is next up.)

=item I<NETNAME=name>

This command will only list programmes running on a network with the
given name.  To allow for multiple networks, use spearate I<-epgquery>
options for each network.  The name comparison is case-insensitive;
unknown network names are silently ignored.

=item I<NETIDX=index_list>

This command will only list programmes with the given index in the channel
table (i.e. zero refers to the first programme in the table, 1 to the
second and so on.)  Multiple indices can be given when separated by commas,
or as a range separated by a dash (e.g. C<NETIDX=0,2,5-10>)

=item I<CHN_ID=id_string>

This command will only list programmes with the given channel identifier
as specified in C<E<lt>channel id="..."E<gt>> in the XMLTV file
(e.g. C<CHN_ID=ard.de> for the German "ARD".)
Note the identifier name comparison is case-sensitive. To allow for
multiple networks, use spearate I<-epgquery> options for each network.

=item I<NETWOP_PRE>

This command restricts networks to the same list you have configured
for the nxtvepg main application. This command has no parameters and
cannot be combined with any other network selection commands.

=item I<THEME=pdc_code> or I<THEME=name>

This command will only list programmes labeled with the given theme. The
theme should be specified by its numeric PDC theme code as listed with
C<-dump pdc> (e.g. C<THEME=16> to search for movies.)  Multiple codes can
be given when separated by commas, or as a range separated by a dash.
Alternatively, the theme can be specified as a string (e.g. C<theme=movie>)
where the language must match that of the database, or English for XMLTV
sources.

=item I<TITLE=text>

This command will only list programmes with the given text in the
programme title.
Case is ignored.  If this option is used more than once, all programmes
with titles matching at least one of the given text strings are listed.

=item I<TITLE_WHOLE=text>

This command will only list programmes which have the exact given text
as title.
Case is ignored.  If this option is used more than once, all programmes
with titles matching at least one of the given text strings are listed.

=item I<TEXT=text>

This command searches the given text anywhere in the title or description.
Case is ignored.  If this option is used more than once, all programmes
matching at least one of the given text strings are listed.

=item I<START=date> or I<START=date1-date2>

This command will list only programmes starting at the given time or in
the given time range respectively. Times can be specified as combined
date and time in format C<YYYY-MM-DD.HH:MM> or as just a time in format
C<HH:MM>. The latter always refers to the current date.
(Example: C<-epgquery start=22:00-23:00>)

=item I<DURATION=nnn> or I<DURATION=nnn-mmm>

This command will only list programmes with a duration in the given
numerical range, or with the exact given duration, if "-mmm" is omitted.
In this context, "duration" means the difference of start and stop times
in minutes (e.g. "15:00 - 16:00" has a duration of 60 minutes.)

=item I<PAR_RAT=age>

This command will only list programmes which are rated as OK for a
person of the given age, or older. For example I<PAR_RAT=12> will list
programmes rated "G", "6", "12".  Use I<-epgquery INVERT> in
addition to get the opposite behaviour (i.e. in the earlier example:
programmes not ok for age 12, which equals age 16 and up.) Note
programms without parental rating are generally excluded when this
option is used.

=item I<EDIT_RAT=rating>

This command will only list programmes with the given editorial rating
or a higher rating. The range of ratings depends on the content provider.
The maximum range is 1 to 7.  Note programms without editorial rating are
generally excluded when this option is used.

=item I<FEATURES=keywords>

This command will only list programmes with all the features indicated
by the given keyword list. The following keywords are accepted:
Relating to audio: I<MONO>, I<STEREO>, I<2CHAN> (multi-lingual), I<SURROUND>;
relating to screen aspect ratios: I<FULL> (4:3), I<WIDE> (16:9), I<PALPLUS>;
relating to transmission: I<ANALOG>, I<DIGITAL>;
relating to encryption: I<UNCRYPT>, I<CRYPT>;
relating to repetitions or live broadcast: I<LIVE>, I<NEW>, I<REPEAT>;
relating to teletext subtitles: I<SUBTITLES>.

When this command is used multiple times, the different feature queries
are logically ORed, meaning all programmes which match all features
given by one of the commands will be listed. (Example:
C<-epgquery FEATURES=stereo,wide -epgquery FEATURES=surround,wide> will
list all programmes in 16:9 aspect ratio with either stereo or
surround sound.)

=item I<INVERT>

This command will only list programmes which do not match any of the
filters given with I<-epgquery> options. See also L<"FILTERING">.

=back

Example:

  nxtvepg -dump html tv.xml -outfile tv.html \
            -epgquery TITLE=Tagesschau -epgquery expire=NOW

=item B<-remctrl> I<command>

This option can be used to remote control an other,
previously started GUI instance of nxtvepg, i.e. to send the given
command to the other process and then exit.

The following commands are available:
I<quit> to terminate the other nxtvepg process;
I<iconify> to minimize the window;
I<deiconify> to undo a previous minimization;
I<raise> to deiconify the other window and to bring it to the top
(in case it's obscured by other windows);
I<acqon> to start acquisition;
I<acqoff> to stop acquisition.


=item B<-clock> I<mode>

When started with this argument, nxtvepg will acquire the current
date and time from teletext and then terminate. The first channel
in your selected TV application's channel table is used as a source.

B<Important restriction>: nxtvepg is able to retrieve the clock only
from channels where the so-called teletext I<packet 8/30/1> is
transmitted, which contains date, time and local time zone offset in
a binary format.  nxtvepg will never attempt to retrieve times from
teletext header lines.

With mode I<print> the date and time will be read and printed.
The output is written to I<stdout> unless you redirect it into a file
or pipe it into another program. See option I<-outfile> for details.

With mode I<set> the time is set as system time, provided the calling
user has the necessary priviliges (e.g. you'd need to be I<root> on
UNIX; since it's depreciated to run nxtvepg with root priviliges,
it's recommended to first print the time into a file and then pass
it to date).

UNIX users should also note that the I<set> mode does not update the
battery powered hardware clock (aka Real Time Clock B<RTC>), so the
correction will probably be lost with the next reboot.  To update your
RTC, call I<hwclock --systohc> or your operating system's equivalent
after nxtvepg.  Some Linux distributions automatically take care of
this during shutdown.


=item B<-help>

List all available command line options.

=back

If you specify XMLTV file names on the command lines, these have to follow
after all option values.

Note to Windows users: all these options - unless otherwise noted -
are available in the Win32 version too. You can supply the options
either from a "MS-DOS" command prompt or batch file, or by appending
them to the executable in a shortcut definition.



=head1 GETTING STARTED

Before you can start reading in TV programme schedules (called
I<acquisition>
from here on), you have to do just a few configurations. Which
ones depends on your setup and will be described in this chapter.
As long as your browser window contains no data, there's also a
recommendation how to get to data in the browser window,
highlighted by a yellow background.

Note none of this setup is required for just loading XMLTV files
obtained from external sources. If you don't have a TV card or
don't plan to use it, select driver "None" in the "TV card input"
dialog.

This manual describes all features of nxtvepg in detail. You
do not have to read all of it at once to operate the software.
However it's recommended to skim at least through L<"BASIC BROWSING">,
L<"DATA ACQUISITION"> and L<"FILTERING">.


=head2 Configuring TV card input

Before nxtvepg starts acquiring EPG data, it should be told which device
and which one of its possible inputs to use. This can be configured in the
I<TV card input> dialog in the Configure menu (for more in-depth
information see also L<"CONFIGURATION">, section "TV card input").

Default device for UNIX is DVB device index 0, or analog device index 0
if there are no DVB cards. Default for MS Windows is the first device
detected by the WDM driver (to which TV-card that one refers is is not
under control of nxtvepg). Default input is the first source reported
by the driver; often this is the TV-tuner (however it might also be
a rather useless external input).


=head2 Configuring a TV application

nxtvepg can cooperate in the following ways with TV applications:

=over 4

=item *

Loading the TV application's channel table: use of the TV tuner frequencies
is pre-requisite for using the Teletext EPG grabber.
The TV app's channel names are also used by the I<Network name> dialog in the
Configure menu (see L<"CONFIGURATION">, section "Network names") for
synchronizing network names between nxtvepg and the TV application.

=item *

Interaction between nxtvepg and the TV application, to provide you
with convenience features like an on-screen display of the current
programme title after channel changes, changing the channel from
inside nxtvepg with the I<TuneTV> button, and background EPG data
acquisition while you're watching TV.

=back

The first one is a passive feature, i.e. only nxtvepg needs to be
adapted to the respective TV applications.  The second one however
requires cooperation of both sides.  For this reason the number
of TV applications for which the passive features are supported
will always be much larger.  On Windows the interaction features
are currently only supported by K!TV.

On UNIX I<xawtv>, I<xdtv> (former I<xawdecode>), I<zapping> and
I<tvtime> are supported currently.
All the features listed above do work with any of them.

On Windows several freeware TV applications are supported for the
passive features; you must select which one you're using.
If you've loaded TV card settings from
a TV app in the I<TV card input> dialog, then the TV app type and path
is already configured.  Else, or if you want to use a different app as
source for the channel table, open the I<TV app. interaction> dialog
(see also L<"CONFIGURATION">, section "TV application interaction").

Regarding the second feature, i.e. the "active" one:
You can check if nxtvepg is able to interact with a specific TV application
by starting both, and then opening the TV application interaction
dialog in  the Configure menu.  The connection status is indicated in
the middle of the dialog window.  On Windows nxtvepg should already display
an error message when it's started while an unsupported TV application
is running, complaining "Capturing is already enabled in the TV card"
or another driver error message.  Only with cooperating TV apps nxtvepg
is able to automatically free the card when the TV app is started
(TV viewing is always given priority over EPG data acquisition.)

B<Important>: On Windows you must not run nxtvepg with acquisition
enabled at the same time as a TV application.  If you ever accidentially
do that, immediately terminate both applications.  When two applications
access the TV card hardware at the same time, the resulting conflicts
can crash your system.

After setting up the TV app type and path, you should open the
I<Network name> configuration dialog to synchronize
network names between nxtvepg and the TV app.  Even if interaction is not
possible, it may still be a good idea to have the same network names in
both applications.  See L<"CONFIGURATION">, section "Network names" for details.


=head2 Configuring the Teletext EPG Grabber

After the TV application and TV card were configured properly, the
Teletext EPG grabber can finally be enabled by checking the first
option in the respective configuration dialog. If you keen the
option for automatic start of acquisition enabled, EPG acquisition
starts immediately after leaving the dialog via the Ok button.
See L<"CONFIGURATION"> section "Teletext grabber" for more details.


=head1 BASIC BROWSING

The browser mainly consists of two windows: the upper one contains
a list of programme titles, sorted by start time. All currently running
programmes (or rather: all programmes that should be running according
to their start time) are marked by a light blue background color.
One line in the list is selected by a cursor; the lower window contains
the attributes and description for this selected title. The amount of
information available here depends entirely on the content provider.

The basic browsing of programme information works very straight-forward.
You can either use the mouse or the keyboard cursor keys:

With the mouse, you can click on any title to select it and display
its description in the lower window.  Use the scrollbar to the left to
scroll the listing forward to programmes farer in the future, or the
weekday scale on the right to jump to a specific time and date.

With the keyboard, use the Cursor up/down keys to select any title.
For fast scrolling use the page up/down keys. With the Home key you
always get back to the first title. With TAB and SHIFT-TAB you can
move the keyboard input focus to other input elements, e.g. to the network
and shortcut lists; to apply a selected theme or shortcut as filter
press the B<Space> key. The first 10 shortcuts can also be
enabled directly from the main window with the digit keys 1-9 and 0.
Control-C in the main window opens the context menu; Control-F opens
the text search dialog; the Escape key is equivalent to the Reset
button.  The menus can be accessed by pressing the ALT key together
with the underlined character in the respective menu button.

You can restrict the programme selection in many ways to make it
easier to find what interests you.  For example, you can restrict the
list to programmes of a certain network; or you can restrict the
list to movies only.  This process is called I<filtering> and
explained in detail below, see L<"FILTERING">.  For the most common
filter options there's a list of I<Shortcuts> at the left of the main
window.  Note you can freely modify this list, see
L<"FILTER SHORTCUTS">.

Since version 2.5.0 nxtvepg offers two different layouts for the TV
schedules: By default programmes of all channels are combined in a
single list sorted by start time, i.e. one big table.  Alternatively
programmes can be separated so that each network has it's own column.
This format is very similar to most paper-based TV magazines.  In this
layout you can scroll both vertically by start-time and horizontally
by networks.

When you resize the main window vertically the difference in height
will be added to the info text window at the bottom.  You can adjust
the proportions between program listbox and the info text with the
"panning" button inbetween, i.e. by dragging the button you can
resize the programme list.

nxtvepg can interact with TV applications (e.g. I<xawtv> on UNIX;
requires initial setup, see L<"GETTING STARTED">) to provide a connection
in both directions: Firstly you'll find a
I<Tune-TV> button in the main window below the clock. When you press
it, the network of the currently selected programme will be tuned in the
TV application.  This also works with a double-click on the programme
or pressing the I<Return> key.  By clicking the right mouse button above
the Tune-TV button you can also pop up a small menu which offers basic
TV controls.  Secondly, when you change the channel
in the TV application, the cursor in the nxtvepg main window will
automatically jump onto the programme currently running on that network.
You can manually trigger this reaction by pressing "i" on your keyboard.
For more details see L<"CONFIGURATION">, section "TV application interaction"

At the bottom of the window there is a status line which informs you
about the state of the browser database and background acquisition.
It's basically a very dense summary of the B<Statistics> popups from
the B<Control> menu and is especially useful to warn you about the
database age or stalled acquisition.

I<Note:>
For most content providers it holds true that programme content descriptions
(i.e. the texts in the lower nxtvepg window) are available only for
currently running programmes and those whose start time is very close.
This time span for full coverage can be as short as 2 hours, or 3 titles
per network. As a consequence you should enable data acquisition as
often as possible; consider running the acquisition daemon permanently
in the background. For details on the acquisition process see the following
chapter.



=head1 DATA ACQUISITION

The basic mode of operation of the Teletext EPG grabber is to cyclically
tune all TV channels in the configured channel table; For each one it
tunes to the respective TV frequency and buffers teletext until the
required page range was received completely. When done, it extracts EPG
data from these pages and writes them to a file in XMLTV format.

Programme listings are updated immediately whenever the Teletext grabber
is done with a channel.
Every effort is taken to not alter the cursor position or title selection,
except if the cursor is on the very first item - then the view and cursor
are moved to the first item in the database, if a new one is inserted.

If you do not choose the TV tuner as input (e.g. if you choose an external
source via the Composite or S-Video input sockets), or if the TV tuner is
kept busy by another application (UNIX only, e.g. if you watch TV) data is
still being acquired, but it's no longer possible to automatically change
the TV channel. Hence you are resposible for selecting the channel of the
content provider who's database you want to load or refresh.

EPG information in teletext usually isn't updated more than once per day
(programme changes notwithstanding). Therefore it should be sufficient to
run the grabber once per day.

Acquisition progress can be monitored using the "Teletext grabber statistics"
and "Database statistics" dialogs in the Control menu.  See L<"STATISTICS">
for details.

=head2 Acquisition modes

The teletext grabber configuration dialog allows selecting an acquisition
strategy. The first two are for the special case that you do not receive
TV via the internal tuner, so that nxtvepg cannot switch channels. The
others are for controlling the timing for searching EPG on multiple channels.

=over 4

=item B<Passive>

In this mode the software never accesses the video device and never changes
the input channel or tuner frequency.  It's useful if you want to set up the
source with command line tools like I<v4lctl>. If you're using applications
which keep the video device busy (e.g. a TV application) you don't need this
mode, because when nxtvepg detects an unsolicited channel change, it
automatically switches to the passive mode for as long as the video device
remains busy.

Please note: when nxtvepg does not control the input channel, it can not
automatically take care of updating your databases. Even if the browser
database should be completely empty, no data will appear until you tune in
the content provider's channel manually with an external application. Because
of this, passive mode is depreciated.

=item B<Cyclic: Full>

This default mode works straight-forward as described at the start of chapter
L<"DATA ACQUISITION">. This means, each channel in the channel table is
tune for as long as it takes to load all required sub-pages and then the
full EPG is extracted and written. Acquisition is complete after a single
cylce across all channels.

Technical details: Since transmission errors have to be considered, it's
actually not attempted to load every single sub-page of the given teletext
range before acquisitions switches to the next. The grabber will just wait
for as many page cycles as the highest sub-page count in the given page
range. (Note most teletext providers will not use sub-pages for today's
schedules, but may use a single page with many sub-pages for following
days. Only a single sub-page per page is transmitted per cycle; the
length of a cycle depends on the overall number of pages; a typical
cycle time is 20 seconds.)

=item B<Cyclic: Now - Full>

In this mode channels are not just grabbed from completely one after another.
Instead, a 2-staged round-robin is implemented. In the first stage, only
a single cycle of the EPG teletext page range is loaded. This is enough
for capturing today's schedules, as these are usually listed on separate
pages that do not involve sub-pages.  Only after this has been completed
for all TV channels, the second stage begins, which loads the full EPG in
the way described above.

Technical details: The "Now" phase is optimized by "peeking" into a
channel for a second and checking which page number the transmission cycle
currently is at. When the current page is far from the start of the page
range required by EPG, the next channel is tried instead of waiting.

=back

Which mode is best for you depends on how you use the browser. When you
are mostly interested in today's schedules, use the "Now - Full" mode.
If you want the full schedules, it's quicker to use "Full" right away.
(Note that the time until all databases are complete is longer
in the "Now - Full" mode than in "Full" mode. In general, the time
used for the Now stage just adds to the time to complete full
acquisition.)



=head1 STATISTICS

There are multiple ways to obtain information about the state of the
databases and the acquisition process: the first and most obvious is the
status line at the bottom of the main window (only if enabled, see
L<"CONFIGURATION">). The second one is the timescale popup window,
which visualizes for each TV network the time ranges which are covered
with TV programme data. The third one is the database statistics popup
window which offer technical details about the database (e.g. how many
programmes are available per day etc.), both in textual form and
as charts. Finally, there's a status window for the Teletext EPG
grabbing process showing the overall state of acquisition and statistics
about teletext packets received from TV networks.


=head2 Status line

The status line separately summarizes the state of the browser database
and the acquisition process. Since there is not much room, only the most
relevant information is included there, i.e. the kind of information
presented depends on the current state.

For the browser database you'll normally just see the name of the XMLTV
file.  If the database is more than a day old, its age and the percentage
of programme information that expired since the last update is appended.
(Note the frequency of required updates depends on length of coverage and
dynamics of your EPG provider; for the teletext grabber it's recommended
to update data at least once a day, see L<"DATA ACQUISITION">.)

If the Teletext EPG grabber is enabled, acquisition status is indicated
following the database status. The status indicates if acquisition is
currently enabled, and if so, to which percentage it is done and which
channel is currently received from. Additionally, there may be a note
about the current phase of acquisition, indicating "Now" when quick
initial refresh is ongoing (if enabled in Teletext grabber configuration),
of "Full" while the full range of TV schedules are captured, or
"Complete".

In case there is no reception or other kinds of errors, this is also
indicated here. In particular, the note "forced passive" means that
nxtvepg is not able to tune the TV channels it would need to update the
database, most likely because some other application is already using the
TV tuner. (See L<"DATA ACQUISITION"> for details.)


=head2 Timescale popup window

You can get a quick overview of EPG coverage for the different networks
using the timescale window which can be opened from the Control menu.

The timescale window has one scale for each network covered by the XMLTV
input file (or merged files). The left end of each scale refers to the
start time of the oldest TV programme in the database.  Depending on how
long ago the database was updated, and on how long expired programmes are
kept by your EPG provider, some or all TV programmes may lie in the past.
The exact dates are printed in the date scale at the top of the window, the
current time is additionally marked with a small arrow labeled "now".

Ranges that are covered by the database are marked in shades of yellow,
red and blue. Uncovered ranges in-between are marked gray. The ranges
before the first and beyond the last programm of each network is left
black. The detailed meaning of colors is as follows:

=over 4

=item I<bright red:>

Programme data covering today's TV schedule. Note with respect to this
color mark-up, a day starts at 6 o'clock in the morning.

=item I<pink:>

Programme data covering tomorrow's TV schedule.

=item I<blue:>

Programme data covering TV schedule after tomorrow.

=item I<dark red, pink, and blue:>

Same as above, however the programme data was acquired more than a day
ago.

=item I<dark yellow / orange:>

Expired programme information (i.e. stop time is in the past)

=item I<yellow:>

Invalid programme blocks (i.e. zero or negative run-time, or overlapping
with other programmes in the schedule)

=item I<gray:>

Gaps between programme coverage, possibly due to gaps in TV transmission,
for TV channels that do not broadcast full 24 hours per day, or due to
lost data in EPG acquisition (e.g. due to decoding errors in Teletext).

=item I<black:>

Time range which is not covered by the content provider.

=back

Programmes for which description texts are currently available are
additionally marked by an increased height of the scale in the covered
time range.


=head2 Database statistics

The database statistics popup window is opened via the Control menu. It
displays statistical information about the EPG database loaded in the main
window.

=over 4

=item I<Last update:>

The time when the database was updated (according to its file modification
timestamp). For a merged database this is the latest time when any of the
merged files was updated.

=item I<Networks in db:>

The number of TV networks covered by the database.

=item I<Blocks in db:>

How many blocks are in the database.

=item I<Blocks today/...:>

How many blocks are in the database covering the TV schedule of
today, tomorrow, and the days after tomorrow, respectively.
Note expired blocks are nout counted, therefore the first value is
usually lower.

=item I<Expired total:>

Total number and percentage of expired blocks in the database (i.e.
programmes whose stop time is in the past). Note it is normal for this
value to increase over time, until the next database update.

During updates, it depends on your data provider and grabber if expired
programmes are removed immediately, or kept for some time (e.g. to allow
looking up description of programmes after they ended, as you can do via
the I<Expired display> filter.) For the Teletext EPG grabber, you can
configure this threshold (see L<"CONFIGURATION"> section "Teletext grabber").

=item I<Expired since acq.:>

Total number and percentage of blocks in the database that expired since
the database was updated (where the time of update is determined by the
timestamp of the respective XMLTV source file). This value is equal to
the "expired total" when your provider or grabber remove all expired
programmes during updates.

=item I<Defective blocks:>

Number of blocks with invalid blocks in the database (i.e. zero or
negative run-time, or overlapping with other programmes in the schedule).
These blocks do not show up in the browser (as it would be impossible to
handle if there is more than one "now" entry for a network).

=back

The pie chart on the left on the window visualizes these numbers. The
circle represents 100% of the blocks in the database.  It's divided in
four parts: yellow for expired and defective programmes; red for today's
programmes; pink for tomorrow's programmes, and blue for the rest. For
each of the latter three, the portion of programmes whose data was
acquired before the current day is marked stippled.

While Teletext EPG acquisition is enabled, the histogram below the pie
chart shows the same information as the pie chart, however tracked over
time. The state information printed to the right of the histogram has
the same meaning as described in the next chapter for Teletext grabber
statistics.


=head2 Teletext grabber statistics

The Teletext EPG grabber statistics popup window is opened via the Control
menu. The window contains two separate parts: The upper part shows
configuration and overall state of acquisition. The lower part shows a
table that indicates a number of statistics about teletext reception for
all currently received TV channels.

Description of information in the upper part of the window:

=over 4

=item I<Acq mode:>

The current acquisition mode as configured by the user, and the mode's
currently worked-on phase: "Now", "Full", or "Complete".

=item I<Acq passive:>

While acquisition is not allowed ot not able to tune TV-channels, this
line states the reason. It could be that the acquisition mode is
configured to passive, or that tuning of TV channels failed.

=item I<Channels done:>

Indicates the number of TV channels that are configured for Teletext EPG
acquisition, and how many of these are already received.

=item I<Current channels:>

The number of TV channels where Teletext is currently captured from. For
analog input devices this is always zero or one, but DVB allows capturing
concurrently from multiple TV networks (i.e. all networks sharing a
physical transponder.)

=item I<Acq. runtime:>

How long the acquisition has been working on the current channel, in
seconds (i.e. format MM::SS).  The value in parenthesis states the capture
duration configured for this channel in the Teletext Grabber
configuration.

=item I<Acq. state:>

State of Teletext reception on the currently tuned channel: "Capturing"
means Teletext pages are being received from the configured page range;
"starting up" means the grabber is waiting for the first of the configured
pages to be received; "scanning" is printed during phase "Now" when
checking the stream of different TV channels for the one where the first
configured page can be received with smallest delay.

=back

The lower part of the window shows a table: The first row shows the names
of the TV channels which are currently received. The following rows show
statistical information for each of the channel in the respective columns.

=over 4

=item I<Channel VPS/PDC:>

The VPS/PDC code that has last been received on the respective TV channel.
Source may be PDC (packet 8/30/2), NI (packet 8/30/1), or VPS. The given
CNI is the equivalent PDC code, if defined, or else the NI code.

If a valid VPS PIL (Programme Identification Label) was received, this is
appended in decoded format (i.e. DD.MM HH:MM with day, month, hour and
minute).

=item I<Capture range:>

This is actually the configuration value entered in the Teletext Grabber
configuration.  It specifies the first and last teletext page number which
are captured for grabbing EPG for each TV channel.

=item I<Captured pages:>

Number of Teletext pages received from the given capture page range
(including repetitions and sub-pages, i.e. this is simply the number of
received page headers).

=item I<Captured packages:>

Number of processed Teletext packets from the given capture page range.
Note a teletext page usually consists of 23-25 packets, although blank
lines may be omitted. The second number of this table row indicates the
percentage of processed packages compared to the entire Teletext data
stream.

=item I<Decoding errors:>

Indicates the number of Teletext characters for which decoding errors were
detected (control information is Hamming-8/4 protected, text data only
parity protected). The percentage is calculated relative to the total
number of received Teletext packages with 45 bytes each.

=item I<TTX data rate:>

The rate at which teletext data lines are received on the current channel
in baud, i.e. bits per second.  Each teletext line counts as 45 bytes.

=back


=head1 MERGED DATABASES

The primary use for merged database is when you have different EPG
providers that cover different sub-sets of networks you can receive. In
this case the merged database allows bringing together the EPG data for
all networks in the browser.

The second use for merged databases is when you have multiple EPG
providers that cover the same network. In this case merging accumulates
the data from both providers for display. For information elements such
as descriptions, text from all providers is concatenated. For attributes
that cannot be accumulated, the attribute from the first providers that
supports it is selected (see details below).

When you select the B<Merge XMLTV files> entry from the B<Control>
menu, you will get a dialog with two listboxes: the left one contains a
list of XMLTV files in the directory selected at the top of the dialog
window. Click the button next to the entry field to open a directory
selector dialog. You can also edit the directory name directly and press
the Return key to update the list of files. (Note only files that have
extension ".xml" and contain valid XMLTV syntax are shown in the list.)

The list on the right side of the dialog shows XMLTV files selected for
merge. Initially the list will be empty; After having merged databases
once, the right side will show the last used configuration. You can add
files to the list on the right by selecting an entry in the list on the
left side and pressing "Add". Inversely, you can remove entries in the
right by selecting them and pressing "Delete". You can reorder entires in
the list on the right side by selecting one or more entries and pressing
the arrow buttons.  When you're done with your selection, press B<Ok> to
start the merge and switch the browser to the newly merged database.

By ordering providers in your selection, you assign priorities which are
important for conflict resolution. A conflict occurs when programme start
and stop times differ between providers. The likelyhood of such conflicts
depends on the quality of your providers; theoretically they should never
happen except if there are late program changes. In reality, conflicts are
not that unlikely, particularily for programmes early in the morning.
You should put the most reliable provider in the first position, because
conflicting programmes from providers further down will be rejected,
i.e. not added to the merged database.

When enabling option B<Automatically include Teletext EPG>, all XMLTV
files created by the Teletext EPG grabber are automatically included.
Even new files created by the Teletext EPG grabber after initiating the
merge will be added automatically. The order of files is undefined when
using this option, but this is normally not an issue as each file contains
only one network, so that there will be no conflicts in-between Teletext
EPG. If you want to add the files manually, switch the XMLTV list on the
left to show the grabber's cache directory by selecting
I<Teletext grabber XMLTV directory> fro the drop-down menu that opens
when clicking the little down arrow next to the directory entry field.
After that select all files in the left list and add them to the list on
the right by clicking the "add" button.

The B<Configure> button in the dialog gives you fine-control over the
priority of providers during the merge of all distinct programme
attributes. You can even completely remove a provider as source for an
attribute (e.g. if they transmit false data). An exception is the title,
where you must not delete any providers.

Attributes that cannot be merged, e.g. editorial rating, are fetched from
the first database in the list that contains the attribute for a given
programme (see also L<"FILTERING">).


=head1 NAVIGATE

The Navigate menu contains a tree of filtering options, that's transmitted
by the selected provider together with the programme data. Filtering enables
to restrict the listing of programme information to those titles matching
the selected menu entry.

The extent and content of this menu depends entirely on the provider.
Unfortunately most providers supply only a very limited menu, so you'll
probably want to define your own filters, as described in the next two
chapters.

Any filter selection can always be undone by the
I<Reset> menu entry or the reset button in the main window.

On Windows this menu is en entry inside of the I<Filter> menu for technical
reasons (the concept of danamically created menu hierarchies seems to be
foreign to Windows, so a popup menu has to be used for the Navigate menu).



=head1 FILTERING

Similar to I<Navigate>,
this menu allows to control which of the programmes in the database
are presented in the listing.  However here, you are not limited to a
preselection of filter options.  There's a filter for every kind of
attributes that can be attached to a program, e.g. it's network,
start time, theme descriptors, and so on.

Filters can be undone either singularily by selecting the same filter
menu entry again, or globally by clicking on the I<Reset> button.

You can combine as many filters as you want to build a complex filter.
If you combine two filters of different types, only programmes that
match both attributes will be listed (logical AND). If you choose more
than one filter of the same type, all programmes that match either
attribute will be listed (logical OR).  Note some filter types also
support multiple "classes" which allow logical AND within a category;
this is explained in more detail in the filter types list below.

I<Examples:>
If you want to get all programmes listed for either network A B<OR> B,
simply select both networks in the filter list. If you want to see all
movies scheduled on A, i.e. all programmes which run on network A B<AND>
are flagged as movies, select network A and theme "movie - general".


=head2 Filter Types

The following filter types are available:

=over 4

=item B<Theme categories>

Restrict the listing to programmes that have any of the given theme
categories attached to them (logical OR). Currently there is an internal
list of 76 predefined themes, which are structured into 11 main categories
and subcategories. Categories loaded from XMLTV sources are mapped to
these themes.

If you want to restrict the listing to programmes that have more than
one of the given themes (logical AND) you need to specify them in
different theme classes. For example: to get a listing of all programmes
which are both Sci-Fi and Comedy, select theme category Sci-Fi, then
switch to a different theme class, and select theme category Comedy.
The actual class numbers do not matter, you just need to use two
different ones (i.e. you can use either #1 and #2 or #5 and #6 etc.)


=item B<Networks>

Restrict the listing to programmes of one or more given networks.
The filter is disabled when all checkbuttons are deactivated.

You can also add a network filter listbox to the main window by enabling
one of the I<Show networks> checkbuttons in the I<Show/Hide> sub-menu of
the Configuration menu (see L<"CONFIGURATION">, section "Show/Hide").
Also note that selection, order and names of networks are all configurable,
in particular you can permanently suppress uninteresting networks from
the list.


=item B<Text search>

Restrict the listing to programmes who's title or description (or either
if both options are enabled) contain one of the given character sequences.
If you enable the I<match complete text> option, an exact match will be
required, i.e. a search for "heute" will not match on "heute journal"
(intended for title-only searches, as started from the context menu).
If you enable option I<match case>, character case is relevant, i.e. a
search for "heute" will not match on "Heute Abend".

You can search for more than one text at the same time; you'll get all
programmes that contain any of the given texts (logical OR).  The listbox
above the text entry field lists all currently active texts.  You can
double click on the options in the list to toggle them between "yes"
and "no" (i.e. option enabled or disabled).  The entries also have small
context menus which allow to remove single texts or toggle options.

Press I<Click here to open...> to open a small dialog which allows to
swiftly add a large list of texts (e.g. a list of your favorite movie
titles.)  You can paste text for example from a text editor into the
dialog or load them directly from a file.  Each line in the text fields
will be added as a separate search when you press OK and all new entries
will have the same options.  Blanks at the beginning or end of lines are
automatically removed and lines starting with # are skipped when loading
from a file.

A history of the last 50 searches (manually entered ones only) including
options, are stored and available in the drop-down menu below the search
text entry field (opened with the arrow button at the left or one of
the up/down cursor keys) and the last 10 searches are also available
in the I<Title> column header menu in the programme list (the latter
in "single list" layout only).

=item B<Recurring titles>

The filter menu of this name lists all programme titles that occur more
than once in the databse. Internally the option is mapped to a text search.
Therefore if you want to remove one of the filters set this way, use the
I<Text search> dialog.


=item B<Features>

Restrict the listing to programmes that match all given attributes
(logical AND), i.e. sound format, picture format, analog/digital,
encrypted yes/no, live/new/repeat and subtitles yes/no.

If you want to allow more than one value of the same attribute
(e.g. picture format wide OR Pal+) you have to put them into different
feature classes (e.g. first select format wide, then set filter class
to 2, then select format PAL+)


=item B<Parental Rating>

Restrict the listing to programmes that are suitable for children
of the given age or elder, e.g. when you select 14, you get all
programmes that are recommended for chilren of age 0 to 14.

Note you can use inverse searches (see below) to find programmes which
are recommended only for children above a certain age.  For example,
if you invert a parental search with age 14, you'll get all programmes
that are recommended for children of age 16 or older.


=item B<Editorial Rating>

Restrict the listing to programmes that are rated (by the content
provider) to have at least the given quality. The range of rating
values is 1 to 7.

Note that some providers do not use all values, e.g. only 1, 3, 5
(thumb down, middle, thumb up.)  For that reason only the first
provider's ratings are used when merging databases
(see also L<"MERGED DATABASES">)


=item B<Start time>

Restrict the listing to programmes whose start time lies in the
interval and whose start falls onto the given date or weekday.

Following options are available: If you enable I<Start at current time>
the interval start is fixed to the actual time when the filter is
set and the value given as stop time is interpreted as duration, i.e.
it's added to the interval start. If you enable I<Stop at end of day>
the interval end is fixed to 23:59 of the same day.

For the date you can chose between the following modes:
I<Ignore date>: the filter allows programmes that start on any day
(in the time window given above).
I<Relative date>: allow only programmes that start N days from today,
i.e. for zero: today, for 1: tomorrow etc.
I<Weekday>: allow programmes starting at the given day of the week
(the scale runs from Saturday until Friday.)
I<Day of month>: allow only programmes starting the Nth day of
any month (the scale runs from 1 to 31.)

Note that the main intention of this filter is to support time
restrictions in the provider's navigation menus (see L<"NAVIGATE">)
or shortcuts.
For manual navigation there are more practical alternatives, e.g.
the weekday scale and drop-down menus in the main browser window
above the time and date columns (not available in grid layout.)


=item B<Program index>

Restrict the listing to programmes who's index is in the given range.
The currently running programme of each network is given index zero,
the following programme of each network index one etc. The three most
important combinations are available as radio buttons:
I<now> (range 0-0),
I<next> (range 1-1) and
I<now or next> (range 0-1).

For merged databases only indices 0 and 1 are supported.


=item B<Duration>

Restrict the listing to programmes whose duration (i.e. difference
between start and stop time) lies in the given range.  When the
maxium is set to zero, the filter is switched off.

You can specify the time values either by use of the scales or by
entering a value in the format MM:HH into the text fields and
pressing the Return key.


=item B<Expired Programmes Display>

Unlike all other filter options this one is used to I<enlarge> the
set of matching programmes.  It allows to include expired programmes
(i.e. those with a stop time in the past) into the list; they
will be marked with a yellow background (you can change that color,
see C<.Xdefaults> and C<nxtvepg.ad> in L<"FILES">.)  With the slider
you can select how for to shift the expire time threshold into the past.
The entry fields below the slider show the threshold in units of days
and hours. You can also edit these fields directly: Press the Return
key to apply the change.

By default the threshold is zero so that expired programmes immediately
disappear from the list.

Note you cannot add more programmes this way than are stored in the
database. nxtvepg will not remove expired programmes from the database,
however they usually get removed whenever you update the respective XMLTV
source file. If and how long expired programmes are kept, depends on your
provider. For the Teletext EPG grabber, you can configure this threshold
(see L<"CONFIGURATION"> section "Teletext grabber").


=item B<VPS/PDC>

Restrict the listing to programmes that have a valid VPS/PDC start
time label attached (VPS/PDC allow to start a video recording at
the exact time a programme starts even when delayed; the labels are
broadcasted currently in Germany, Austria, Switzerland and England).
Additionally you can filter for programmes with a label which differs
from the actual start time; these are usually programmes whose
start time changed or which were scheduled later (usually the VPS/PDC
label then is the actual start time minus one minute)

=back



=head2 Inverting filters

Near the end of the filter menu there's the I<Invert> sub-menu which allows
to invert the outcome of filtering.  There are two levels of inversion:
global and individual.

When you select global inversion, you'll get exactly the programmes that
otherwise would have been filtered out (except for programmes which are
permanently filtered out by your network and air-time selection). In other
words, all programmes which match your current filter setting are removed
from the list.  Note: due to the way filter shortcuts are merged when more
than one is selected at the same time, it's in most cases not recommended
to use global invert for filter shortcuts unless you change the combination
rule (see L<"FILTER SHORTCUTS: Shortcut combination modes">.)

The invert menu also allows to individually negate certain filter types
(there are also invert buttons in some filter sub-menus which have the
same function).  The logic of combining flters is the same as without
inverting, i.e. there's a logical OR between filters of the same type
(e.g. network A OR network B) and a logical AND between different filter
types (e.g. network A AND theme category movie).

B<Example 1:> If you want all programmes which are neither categorized
as sports nor as children's programmes, select theme filters sport
and children's and then invert the current theme filter (usually class #1;
you can equivalently use the global invert if themes are the only filter).

For the theme filter it's possible to invert
only parts of the selection, so that you can require that a programme
has a certain attribute and at the same time require that it doesn't
have another attribute.

B<Example 2:> If you want all programmes which are movies but NOT adult
movies, select theme category Movie, switch the theme class to 2,
select theme adult and then invert theme class 2.

Note: although the Feature filter offers the use of different classes
so support a logical OR, the inversion is not based on classes. This is
due to the fact that there's a logical OR between feature classes (in
contrast to the logical AND between theme classes).


=head1 FILTER SHORTCUTS

There's a number of predefined filter options in the main window below
the clock. These shortcuts enable you to invoke filters by a single click
of the mouse. You can freely add, change or remove entries in this list.

When you want to add a shortcut, first set the filters up in
the way you want to save them, i.e. either choose existing shortcuts or
select an entry from the Navigate menu and/or add filters from the main or
context menus.  When you have found an interesting selection, invoke
I<Add filter shortcut> from the shortcuts menu.

This will open the shortcut edit dialog (which will be described in detail
below) with your new shortcut at the start of the list at the left. You
should change the shortcut label in the field at the top right; by default
it's just "new shortcut".  The label will be displayed in the shortcut list
in the main window.
When you're done press I<Save>, or I<Abort> if you've changed your mind
and don't want to add this shortcut after all.  If you want to define
multiple shortcuts you can leave the Edit dialog open and save just once
when you're done with all changes.

You can invoke several shortcuts in parallel by moving the mouse with
the left button pressed or by pressing the I<CTRL> or I<SHIFT> keys when
selecting in the main winddow's shortcut listbox.  See the chapter below
for possible side-effects when combining shortcuts.

The shortcut list has a small context menu which shows when you click with
the right mouse button into the  shortcut list.  If offers faster access
to the same commands which are available in the main menu plus a I<Delete>
command; the shortcut above which you press the mouse button is
pre-selected for the chosen operation.

When you I<Update> a shortcut and your current filter setting contains
different filters than the previously stored setting, you'll be asked if
the filter mask should be automatically adapted (e.g. if your filter
previously searched for theme category 'movie' but your current filter
consists of a text search).  See below for more details on filter masks;
unless you have manually edited this shortcut's mask before, you can
safely press "Yes".

=head2 Editing Filter Shortcuts

To change names and/or organisation of your shortcuts, open the edit
dialog (e.g. via the main menu.)  On the left of the
dialog window there's a list of all your shortcuts. In the middle there's
a row of command buttons which operate on the shortcut selected at the
left (explained below).  At the right there's an editable field with
shortcut name, a read-only display of the filter settings currently
assigned to the shortcut, and popup menus to change the filter's mask
and combination rules (also explained in detail below.)

The buttons with up/down arrows will move the selected shortcut up or down. 
The buttons with arrows pointing to the upper left and lower right are
used to move a shortcut entry out of or into a sub-folder respectively.

The I<Delete> button removes the selected shortcut from the list (the
deletion won't affect the main window until you press I<Save>, so you
can leave the dialog with I<Abort> to undo the operation.)

The I<Invoke> button will apply the shortcut's filter setting to the
main window just as selecting the shortcut in the main window's list.
You can then change the filter settings via the filter menus.  Use the
I<Update> button to assign the main window's filter settings to the
edited shortcut.

You should be careful with the update button since it's easy to
overwrite the wrong shortcut.  If you notice such a mistake, you can
undo the change either by leaving the edit dialog with the I<Abort>
button or selecting the respecting shortcut in the main window and
assigning the original settings via I<Update>.

=head2 Filter Masks

When you deselect a shortcut, either by selecting another shortcut
or clicking on it a second time with I<CTRL> held down, all it's
filters will automatically be undone. Hence when you have two themes
shortcuts, e.g. "Movies" and "Sports", and select first Movies, then
Sports, you'll see only sports programmes afterwards.  However if you
had selected theme movies manually, e.g. by the context menu explained
in the next chapter, the movies filter might remain set, so that you'd
get all programmes of theme movies OR sports.  Since that is usually
not what one expects, a filter mask has been introduced to the shortcut
setting.

The filter mask is defined in the shortcuts dialog with a checkbutton
for each filter category. By default, the mask is enabled for every filter
category you've included in the shortcut filter setting.  When you invoke
the shortcut from the main window later, all filters of the given categories
will be cleared (masked out) before the shortcut filters are added.
To return to the above example: if the "Sports" shortcut is defined
with a themes mask, the manually set movies filter would be cleared
before the theme filter is set to sports.

The masking can also be enabled when no filter of that category has been
chosen. This can be used to define I<undo> shortcuts. E.g. choose the
mask 'Themes' if you want a shortcut that allows to clear all
theme-related filters at once. Or enabled all masks for a I<Reset>
button (the only difference to the pre-defined Reset button would
be that the cursor does not jump to the first Now programme.)

=head2 Shortcut combination modes

By default when combining multiple shortcuts, all filters of all selected
shortcuts are simply thrown together (i.e. "merged") and then processed
as if they belonged all to one shortcut.  The same combination rules
apply as described in L<"FILTERING">.

For example, if one shortcut searches for movies, another one subtitles,
the combination will search for programmes which are movies B<AND> have
subtitles, as this is the default when combining filters of different
types.  Inversely, if you have one shortcut which filters for category
"Drama" and one that filters for category "Comedy", the combination will
filter for all programmes which are either in categore "Drama" B<OR> "Comedy",
as this is the default when combining filters of the same type.

For such simple shortcuts which consist of a single filter type this
behavior is usually intuitive.  When combining complex filters the result
of merging however might not match your expecations.  For example, if
you have a shortcut "Drama on network A" and one "Comedy on network B",
merging would result in "either Drama or Comedy, on either network
A or B", i.e. the list would also include Comedy on network A and
Drama on network B.

Hence the shortcut edit dialog has a I<Combination rule> option where
you can change the mode into I<OR> or I<AND>.  If you put a shortcut
into this mode, it's filters will be handled separately from all others.

The only drawback is that the shortcut's filters will not be editable
via the filter menus.  If you ever want to change the filter settings
without creating them from scratch, use the I<Invoke> and I<Update>
buttons in the edit dialog
(see L<"FILTER SHORTCUTS: Editing Filter Shortcuts">.)

=head2 Shortcut update dialog

When you select the I<Shortcut Update> command in the main menu, there
will be a small dialog with a list of all shortcuts.  The filter settings
of the shortcut you select in this list will be overwritten with the
currently active filter setting once you press the I<Update> button.
You can also use the I<Update & Edit> button to jump directly into the
filter edit dialog (see further above in this chapter)

Note that while the shortcut edit dialog window is open, updates (as well
as deletions or additions) will only affect the temporary list in the
edit dialog window until you press the it's I<Save> button.  Also the
list offered for shortcut updates consists of the shortcuts as they are
defined in the temporary list. This allows to test your changes before
you commit them.

Note that a faster way to change a single shortcut is to use the context
menu, since it allows to skip this intermediate dialog.


=head1 COMPOSITE ATTRIBUTES

By default the TV schedule contains for each programme "basic" attributes
like its date, starting time, title, TV network in a pre-defined textual format.
By using composite attributes you can customize the TV schedule according
to your personal preferences.  For example you could (1) alter the display
format of pre-defined attributes (e.g. use colors for highlighting),
(2) add new attributes, for example with images as markers for favorite
programmes and/or (3) compact display by combining several attributes into one.

Composite attributes replace single attributes in the display (e.g. only
the theme category column.)  Newly created composite attributes will be
appended to the list of pre-defined attributes.  You can then configure
your programme list as a mixture of pre-defined and composite attributes
(see L<"CONFIGURATION">, section "Select attributes")

Composite attributes are created and edited via the
I<Attribute composition> dialog in the I<Configure> menu
(see L<"CONFIGURATION">, section "Attribute composition")

The "heart" of attribute composition is a list of filter shortcuts
and reminder groups, which you build as a subset of your personal
filter shortcuts and/or reminder groups (see also L<"FILTER SHORTCUTS">
and L<"REMINDERS">.)

Whenever nxtvepg displays a composite attribute in the browser, it
matches the programme's actual attributes (e.g. theme categories or
assigned reminders) against the shortcuts and reminder groups associated
which the respective composite attribute, in the given order
(top to bottom in the dialog's list - so order is important).
If a match is found, the text, image or attribute which was assigned
to that specific shortcut match is displayed in the column with the
format specified for this match.  If none match (and there's no
I<*no match*> entry, see below), nothing is displayed in place of
the composite attribute.

Note in this context I<matching> means that a shortcut's filters are
tried against the TV programme, i.e. a programme "matches" a filter when
it would remain displayed when you enable that filter shortcut in the
main window.  A reminder group is considered matching when the
respective TV show is programmed as a reminder in that group (or matches
a shortcut which is assigned to the given reminder group - but let's
ignore that for now to avoid confusion.)

Example: to create a personalized version of the I<Editorial rating>
(ER) column, you could create three shortcuts: one with the ER filter
set to ">=6", one with ">=4" and one with ">=2"; then you'd create a
new user-defined column and insert the three shortcuts in this order;
to the first shortcut match you'd assign the text "great", to the
second "ok" and to the third "bad".  As a result you'd have a column
where the numerical ratings are replaced with your texts.

There is also a special entry at the end of the dialog's shortcut list
called I<*no match*>. It acts as a catch-all (i.e. wildcard) if none of
the shortcuts in the column matches the current programme entry.  In the
above example this would be all programmes with an ER below 2 or without
a rating.

The catch-all is particularily useful to overlay standard columns with
alternate  texts for selected programmes. To stay with the ER example,
you could define a column with two shortcut entries: ">=6" and
"*no-match*".  To the ">=6" shortcut match you could assign an image
marker; to all other the "ER" attribute.  Hence programmes with an
ER >=6 (i.e. all "great" programmes) would have an image displayed and
hence clearly stand out from all other programmes, which get the
regular content of the ER column (i.e. the numerical rating or an
empty column for unrated programmes).

You can also use this machanism to combine several columns into one,
to keep the listing compact.  For example you can combine the ER column
with the theme column, so that for movies with ER >= 6 the text
"great movie" is displayed, for all others the regular theme description.


=head1 REMINDERS

Reminders allow to mark TV shows which interest you and have nxtvepg mark
them in the programme list and display a message or execute an external
command when they start.  You can select either individual programmes in
the programme list or complete filter shortcuts, e.g. for TV series.

To set a new reminder simply select it with the cursor in the programme
list and choose I<Add reminder for selected title> from the I<Reminder>
menu.  The same command is also available in the context menu, i.e. by
clicking on the selected title with the right mouse button.  To remove
the reminder, simply select the title again and choose
I<Remove reminder for selected title>.

By default nxtvepg will display a message popup for every reminded
programmme 5 minutes before and directly at the start time.  You can
change this in the I<Configure reminder groups...> dialog described
in a separate chapter below.

If you want to set a reminder for an entire series, you need to create
a filter shortcut first which matches the series (e.g. filtering
by title).  To reduce the overhead you can create a
shortcut which matches all your favorite series and set a reminder for
this collection.  To assign a reminder to the shortcut use the
I<Edit reminder list> described in the next chapter.

Note you can add a single reminder for entries which already match a
shortcut reminders.  This allows to assign an additional, specific
action for that TV show (if you use different groups.)  Additionally
you can suppress handling of reminders for individual shows; this
option if offered in the Reminder and context menus when applicable.
This option may help to get around excessively complex or restrictive
shortcut filters.

By default nxtvepg has (in the single list layout) a column titled
I<Mark> which contains a red dot for all programmes which have a
reminder registered, i.e. both single programmes and those which
match shortcuts with associated reminders.  You can also set a filter
which will display only programmes with reminders in the proramme
list by selecting I<Show reminder matches> from the Reminder menu.

=head2 Edit reminder list

Opens a list of all reminders.  Single programmes and shortcuts are
listed in separate "tabs"; switch between them by clicking on the
buttons at the top.

The B<single programmes> list is sorted by start time and network.  When
you double-click on a reminder, the respective network will be filtered
for in the programme list and the cursor jumps onto the programme
(if it's present in the current database.)  To delete a reminder click
on the I<Delete> button or press the delete key on your keyboard. You can
also select the reminder's "group" (see below) either by selecting a
group in the popup menu from the I<Set group> menubutton or by clicking
with the right mousebutton into the group column.

The list will normally not contain reminders for programmes which are
already expired.  You can use the I<Display> popup menu at the right to
change that.  You can also include "suppressed" reminders, i.e. entries
which where created via the respective entry in the main menu to supress
shortcut matches; those will appear with the virtual I<suppress> group
in the list.

When you switch to the B<Shortcuts> tab, you'll see a list of all shortcuts
for which you have added reminders.
The first time you open the dialog it will be empty.  You can add shortcuts
by selecting them from the popup menu at the right.  Equivalently to single
programmes you can change the group or delete the reminders again.  All
changes to the lists are immediately saved and the markers in the programme
list updated.

All changes you make in this dialog take effect immediately.


=head2 Reminder group configuration

Opens a configuration dialog for reminder groups.  Every reminder is
assigned to exactly one group which determines which actions are executed
at the programmes' start time.  Having groups allows to change actions
(and especially: disable them if you're not in the mood to watch TV)
easily without having to edit every single reminder.  When you create
a new reminder with the simple "add reminder" menu command it will be
assigned to group zero.

By default nxtvepg has only one group which pops up a message 5 minutes
before and directly at the start time.  You can change this by selecting
the group in the list at the left and then modifying the parameters at
the right.  Or create a new reminder by clicking I<New>.  You can also
change ordering of groups (only available for your convenience; except
for group zero ordering is not relevant.)  The I<Show> buttons sets a
filter for the programme list so that only programmes matching reminders
in the same group as the currently selected shortcut are displayed.

At the top of the parameter input section is the I<Label> entry field.
It allows to give the group a name, which is then used in the reminder
lists and in reminder confirmation messages.  Below is a checkbutton
called I<Temporarily disable all group events>.  While enabled all
actions for that group are suppressed, i.e. you'll get no popup messages
and scripts are not executed. Note this setting only applies to the
current session and is reset when nxtvepg is restarted (you should clear
the action lists if you want to disable reminder messages permanently.)
The programmes are still marked in the listbox though.

Further below is an entry field where you can give a list of comma separated
values which define at which offsets reminder messages are displayed;
offsets are substracted from the start time, i.e. when you enter "5" a
message will appear 5 minutes before the programme's nominal start time.
You can use negative values (e.g. "-5") if you want reminders to appear
later than the start time.  In addition you can set start times for
commands.  Commands are silently executed in the background, unless
you enable I<Ask before executing script>.

Note configuration changes (including group additions or deletions) are
not applied before you leave the dialog with OK.

=head2 Reminder Messages

Once the nominal start time of a "reminded" programme (minus the configured
time offset) is reached, a message window will appear.  If there's more
than one message triggered at the same time, or if you leave the window
open and reminders for additional programmes are triggered, they will all
be collected in this window; in this case there's a cursor which determines
to which reminders the controls explained below apply.
When you press I<Ok> all messages are marked as "done" and will not appear
again.  With a double-click or the I<Tune-TV> button you can switch the
channel of a connected TV application to the selected programme, just as
in the main programme list.

For message windows there's several buttons which allow to control
further reminder processing.  I<Suppress> will prevent any subsequent
messages for the programme.  (Note that this is not the same as suppressing
reminders in the main menu, since here you supress only messages but the
programme remains marked as reminder).  I<Repeat> allows to schedule
additional reminder messages at arbitrary time offsets.  Note that
messages configured for the group are suppressed until the manual repetition
but will re-appear afterwards.


=head1 CONTEXT MENU

A quick way to select and deselect filters is by using the
context menu, which opens when clicking with the right mouse button
onto a programme entry in the main browser window.

This menu consists of several parts, separated by horizontal lines,
which depend on the currently selected programme and hence are not
always present.

=over 4

=item B<Undo currently selected filters>

The first section holds entries which allow disable currently
selected filters either one by one or globally (reset).
See also L<"FILTERING: Filter Types">

=item B<Add new filters>

The second section offers a number of possible new filter options, which
depend on the currently selected title and the already selected filters.
The offered filter types include: themes and network of the selected
programme title, repeat or original transmission suppression (only in
cunjunction with title text filters) and last but not least the title text.

The title text filter allows to check very quickly for
repeats of a programme. These filter options are included only if
there is another programme with the same title.

=item B<Add reminder>

This menu entry will add a reminder for the currently selected
programme.  The reminder will have the default reminder group.
To create reminders in different groups use I<Add reminder into group>
in the reminder main menu (see also L<"REMINDERS">)

=item B<User-defined entries>

The optional fourth section is empty by default, but can be used to invoke
user-defined external commands on the selected programme. More precisely,
you can execute any command with properties of the selected programme
(like title or start time) on its command line. The user commands
can be added via the Configure menu
(see L<"CONFIGURATION">, section "Context menu configuration").

=back


=head1 CONTROL

Summary of commands available from the Control menu:

=head2 Load XMLTV file

Open the XMLTV file selection dialog.  This dialog lists all XMLTV files
in the directory selected at the top in the list at the left. Click the
folder button next to the entry field to open a directory selector dialog.
You can also edit the directory name directly and press the Return key to
update the list of files. (Note only files that have extension ".xml" and
contain valid XMLTV schema are shown in the list.)

When clicking once on the name of a file in the list at the left, the
provider name stated in the XML file and the list of covered channels
are shown in the info boxes on the right side of the dialog.  When
double-clicking on a file name, or when cleaving the dialog via the "Ok"
button, the selected XMLTV file will be loaded into the browser.

If the file hasn't been updated for a long time, the programme list might
be empty (i.e. all programmes expired). In that case restart the grabber
you used to create the file.


=head2 Merge XMLTV files

Open a dialog that allows to merge several databases into one.
See L<"MERGED DATABASES"> for details.


=head2 Load Teletext EPG

Merges and loads XMLTV files created by the Teletext EPG grabber into the
browser. The networks which are covered are determined by the channel
selection in the Teletext grabber configuration. This mode is the default
where there is no data and the Teletext grabber is enabled.

This option can be selected even when the Teletext grabber has not yet
generated any output. In this case you'll see a screen with the nxtvepg
logo and a note to wait for data acquisition. As soon as any EPG
information could be extracted, it is shown in the display. You can
check on state of acquisition using the "statistics" popup windows
also available via the Control menu.

This option is equivalent to manually merging XMLTV files and checking the
"Add all Teletext EPG data" option, except that you can't use that way
until there is at least one XMLTV file.


=head2 Enable acquisition

Toggles EPG acquisition via the TV card on or off temporarily. This
option is grayed out if you do not have a TV capture card or if the teletext
grabber is disabled (see L<"CONFIGURATION"> section "Teletext grabber").

When starting the browser, acquisition is enabled automatically while the
respective option in the teletext grabber configuration is enabled.
You can suppress automatic start temporarily with the B<-noacq> command
line switch, or permanently by disabling auto-start in configuration menu.
Switching off acquisition temporarily allows other applications (e.g. a
TV application or teletext viewer) to use the TV card while you browse the
database, if you have only one TV capture card.

You will get an error message if the device is already busy for a
different application, or if you don't have permission to access the
device (UNIX, see also L<"FILES">). If you're experiencing problems that
might be hardware or operating system related, test with a TV application
or teletext decoder first, because these usually allow for easier
debugging (e.g. due to the visible TV image). See also
L<"GETTING STARTED">.

UNIX: Acquisition can also been switched on and off automatically (i.e.
from a shell script) by sending signal C<HUP> (e.g. with the kill(1)
command) to any of the nxtvepg processes or threads.  If you're using a
daemon for acquisition (see the next command) you have to send the signal
to one of the daemon processes/threads.  To simplify this, the pid of the
process which needs to be signalled is stored in F</tmp/.vbi.pid> while
the device is in use.


=head2 Connect to acq. daemon

Connect to or disconnect from an acquisition daemon, running in the
background on the same host, or somewhere else in the network.  This
option is enabled only if the teletext grabber is configured (see
L<"CONFIGURATION"> section "Teletext grabber").

The address of the daemon and other parameters are configured in the
I<Client/Server> menu (see L<"CONFIGURATION">, section "Client/Server").
By default the daemon
is started on the local host.  The main advantage of using the daemon
is that you can keep running acquisition permanently in the background,
even if you terminate the browser, or on UNIX even the X11 server (i.e.
the windowing system). On M$ Windows the daemon is terminated when you
log off.

If you attempt to connect, but no daemon is running, you'll be offered
the option to automatically start the daemon and retry the connect,
provided you have configured server hostname I<localhost>.
The daemon will be started with the same database directory and rcfile
as the browser.

Note that disconnecting from the daemon or terminating the browser does
not stop the acquisition and hence does not free the device.  If that's
what you want, choose the I<Enable acquisition> command instead, which
terminates the daemon.  Of course this option only is available if your
daemon is running on the same host and with the same user id as the
browser process.


=head2 View statistics/timescales

The following commands open windows with statistics about the databases
and acquisition progress.  See L<"STATISTICS"> for details.

=over 4

=item B<View coverage timescales>

Toggles the timescale window for the browser database. The window
reflects for each network included in the selected database, which
time ranges are covered by programme information. While acquisition
is working on the database, you can watch how more and more of the
scales get populated.
See also L<"STATISTICS">, section "Timescale popup window".


=item B<View database statistics>

Toggles the browser database statistics window, which informs you about
number of program entries in the database, fill percentage, expiration
percentage, date of last update etc.  If the acquisition is working on
the same database, it also shows a high-level state and progress of
acquisition. See also L<"STATISTICS">, section "Database statistics".


=item B<Teletext grabber statistics>

Toggles the acquisition statistics window, which informs you about the
current state of acquisition as well as statistics of teletext packages
received from the currently received TV networks.
See also L<"STATISTICS">, section "Teletext grabber statistics".

=back


=head2 Export as text

Open a dialog that allows to export the complete database into a text
file.  Each line in the file will represent one item in the database.
The item's different fields are separated by TAB characters; the line
is terminated by a single new-line character (no line feed character,
even on Windows).  In some cases missing values are represented by
C<\N> which is the MySQL I<NULL> identifier (currently only used for
the VPS/PDC field).

The generated text file can be loaded directly into a relational
database.  It's not formatted for viewing in a regular text editor.
Networks and themes are represented as numerical indices into the
network and themes table respectively.  Hence these tables are
required in addition to the programme table.  To load them into
a database, you need to export them into different files.

For I<MySQL> you could create the following tables:

   CREATE TABLE PI (
      netwop smallint(2) unsigned NOT NULL,
      Dstart date NOT NULL,
      Hstart time NOT NULL,
      Hstop time NOT NULL,
      vpspdc_pil datetime,
      prat tinyint(2) unsigned,
      erat tinyint(2) unsigned,
      sound enum("mono","2-chan","stereo","surround"),
      is_wide BOOL,
      is_palplus BOOL,
      is_digital BOOL,
      is_encrypted BOOL,
      is_live BOOL,
      is_repeat BOOL,
      is_subtitled BOOL,
      theme_0 tinyint(3) unsigned,
      theme_1 tinyint(3) unsigned,
      theme_2 tinyint(3) unsigned,
      theme_3 tinyint(3) unsigned,
      theme_4 tinyint(3) unsigned,
      theme_5 tinyint(3) unsigned,
      theme_6 tinyint(3) unsigned,
      title varchar(40) NOT NULL,
      descr text,
      PRIMARY KEY (netwop, Dstart, Hstart)
   );

   CREATE TABLE AI (
      netwop_idx smallint(2) unsigned NOT NULL,
      cni smallint(5) unsigned,
      lto_mins smallint(5),
      daycount smallint(5) unsigned,
      alphabet smallint(5) unsigned,
      addinfo smallint(5) unsigned,
      name text,
      UNIQUE netwop_idx (netwop_idx)
   );

   CREATE TABLE pdc_themes (
      theme_idx smallint(3) unsigned NOT NULL,
      cat_idx smallint(3) unsigned,
      name_eng text,
      name_ger text,
      name_fra text,
      UNIQUE theme_idx (theme_idx)
   );

Note that the database can also be exported directly from the command
line by using B<-dump pi>, B<-dump ai> or B<-dump pdc>.  In this case
you can use one or more I<-epgquery> options to export only selected
channels and programmes (for details see L<"OPTIONS">.)

=head2 Export as XMLTV

Open a dialog that allows to export the complete database in XML format,
as defined by the B<xmltv.dtd> version 0.5 (see L<http://xmltv.org/>)
The generated file contains both the channel table and the complete
TV schedule, including any networks you might have suppressed from the
listing inside nxtvepg.

B<Hint:> If you want to restrict the amount of exported data, configure
a merged database.  This is possible even for a single provider.
This way you can exclude certain networks or attributes, e.g. to omit
theme categories from the output (see the "Configure" sub-menu in the
merge configuration dialog.) See also below for options when exporting
via command line options.

Some TV applications are known to not parse XMLTV timestamps correctly.
As a work-around for such buggy applications, there's an option which
allows to export dates and times in local time instead of UTC (also
known as I<Greenwhich Mean Time> or GMT.)  If all programme data
appears shifted by one or two hours in your TV app's schedule, try
this option.

Note that the database can also be exported directly from the command
line by using the B<-dump xml> option. In this case you can additionally
use one or more I<-epgquery> options to export only selected channels
and programmes (for details see L<"OPTIONS">.)

=head2 Export as HTML

Opens a dialog that allows to export the complete database or selected
programmes into a file in HTML format (Hypertext Markup Language) which can
then be loaded into a WWW browser, e.g. I<Netscape> or I<Opera>. This is
particularily useful if you want to print out TV descriptions.

At the top of the dialog window you have to enter the output file name;
if you don't include an extension, I<.html> is automatically appended.
Click on the little folder button to the right for a file selection dialog.
Press the I<Export> button to create the HTML document and I<Dismiss> to
close the dialog window.

By default the checkbutton I<All matching programmes, but max ...> is
enabled.  In this mode all programmes that match current filter setting will
be exported, but only up the given number of programmes. It's recommended
to limit the number of programmes because else very large HTML documents
are created which may take a long time to load into your Web browser.

Use mode I<Selected programme only> to export only the programme which
is currently selected in the main window. In combination with the
I<Append to file> mode this allows to incrementally build a document
with exactly your programmes of interest.

In the box below there are three radio buttons with which you can select
the output format. If you choose I<Write titles> you'll get a table in the
same configuration as in the programme title list in the main window.
If you want to have different column types, you can build a separate column
configuration by selection I<Different columns than main window> and then
pressing the I<Configure> button to select which column types to display.

If you select I<Write descriptions> you'll get for each exported programme
a feature summary and description, similiar to the info in the lower part
of the main window.

If you select I<Write titles and descriptions> you'll get the title table
on top and all descriptions separately below.  In this mode you can select
I<Add hyperlinks to titles> to add hyperlinks from titles in the table
to the descriptions.

The look of the generated document is almost entirely determined by use
of an internal CSS stylesheet. If you don't like the look you can override
it with your own stylesheet. Save it to a file named F<nxtvhtml.css> and
put it in the same directory as the generated HTML file. For more
information on HTML and style sheets see L<http://www.w3.org/>.  If your
column configuration contains images (see L<"COMPOSITE ATTRIBUTES">),
you have to put them into a subdirectory called F<images>; also your
browser has to support the B<PNG> image format.

Note that the HTML file can also be written directly from the command
line by using the B<-dump html> switch.  In this case the number of
written programmes can be limited by appending a number to the keyword
(e.g. "-dump html:50") and you can use one or more I<-epgquery> options
to export only selected channels and programmes (for details see
L<"OPTIONS">)

=head2 Quit

Close all windows and terminate the application.
If you have started acquisition as a daemon, it will not be terminated
(see L<"CONTROL: Connect to acq. daemon">).



=head1 CONFIGURATION

Summary of commands available from the Configure menu:


=head2 Teletext grabber

Open a dialog which allows to enable and configure the teletext EPG
grabber.  The grabber works by cyclically tuning all TV channels,
loading the TV overview teletext pages (e.g. 301-399 for most German networks)
and building a small database from them.  For titles which contain
references to other teletext pages, the grabber loads these pages
too and extracts descriptions from them.  Finally the grabber's
output is written into separate files in XMLTV format.

To show the EPG data collected by the Teletext grabber in the browser,
use command "Load Teletext EPG" from the Control menu, or use the
"Merge" command and include the grabber's files directly or via the
"automatic" option below the selection lists.

A disadvantage of teletext is the long time it takes to grab the data.
The cause for
the long duration is that most TV networks use sub-pages in their
TV-schedules, so that it takes several cycles until all parts of a
given page are loaded, usually 90 - 120 seconds. However when using
DVB, this is extenuated by allowing concurrent capture from channels
sharing a transponder.  Another
difficulty encountered by the teletext grabber is the lack of a
standardized format for the schedules.  Hence the data extraction
cannot always work perfectly.  In particular the capabilities to
extract theme categories and additional attributes are very limited.
But these disadvantages can be compensated by merging teletext EPG
with other sources (see L<"MERGED DATABASES">)

If you haven't configured a TV application yet, you'll get an error
message when enabling acquisition via the teletext grabber, since it
requires a TV channel table. The grabber
will retrieve EPG data starting with the first channel listed in
the TV app's channel table, and then switch through one-by-one.
Currently you cannot change the order or skip any programmes, but
you can limit the number of channels in the configuration dialog.

Note: When acquisition mode "Cyclic: Now - All" is selected
(see L<"DATA ACQUISITION">) the grabber uses an optimized
strategy during the "Now" stage in which waiting times are
minimized by changing the order in which EPG data is read.
This way the grabber requires about 15-20 seconds per channel
in average. In the "Full" stage the grabber waits for the time
given after I<capture duration> in the configuration dialog;
by default that's 90 seconds (such a large value is required
because programme descriptions are often transmitted on
so-called "sub-pages" which are not included in every teletext
cycle.)


=head2 TV channel scan

Open a dialog that allows to start a scan across all TV channels for
Teletext transmissions. However this is for your information only; the
scan is not required for operation of the Teletext EPG grabber.
Note that the provider scan only works if you use the internal tuner
as input source (see also L<"GETTING STARTED"> and the subsequent
chapter on TV card configuration).

The I<Use TV app.> button is automatically checked if an I<xawtv>
configuration file is found in your home directory (on UNIX) or
a TV application was set up in the I<TV app. interaction> dialog.
Instead of searching all possible TV channels or frequencies in
all bands, nxtvepg then just checks the TV channels defined there,
which usually saves a lot of time and is also more reliable.

Otherwise the scan is performed on all possible transmission frequencies
in multiple frequency bands. This is supported only for analog TV capture
cards.  If you live in France, select the French frequency table
(which implies the I<Secam L> TV norm) to be used for the TV channel scan;
else use the default frequency table which covers common cable network
frequencies in Western Europe with the PAL TV norm. Other countries are
currently not supported for this mode of scanning. If you live in an area
where you receive both PAL and SECAM stations, you should perform the TV
channel scan twice with different channel tables.

Check the I<Slow> button if you have bad reception on some channels.
In slow mode the scanner will not skip channels with "unstable"
video signal (i.e. no PLL H-lock within 0.150 seconds) and wait
twice as long as normal for everything (e.g. up to 4 seconds for a VPS/PDC
channel identification). Note that you can change this setting while the
scan is running.

Technical background information on how the TV channel scan works:
The scan will visit every physical TV frequency (or subsets thereof if
you use one of the options described above) and check for a TV signal.
If one is detected within 150 ms or if at least one teletext packet
was received, the scan waits up to two seconds for a valid VPS/PDC
channel identification. This information is then printed. Currently
the results of the scan are not used by the application.


=head2 TV card input

Open a dialog where the TV card hardware parameters can be configured.

This dialog contains more options on Windows than on UNIX platforms
because on UNIX the driver is part of the operating system, whereas
on Windows it's part of the application and has to be configured
separately for every application.  Hence, before you can use nxtvepg
you must firstly decide between using the internal "dsdrv" driver
and the card vendor's WDM driver; secondly, if using "dsdrv", you
need to configure the driver for your hardware in the I<Configure card>
sub-dialog.  Please refer to L<"GETTING STARTED"> for a detailed
description of these steps.

I<Video source> allows to choose which video input source to use,
i.e. where you have connected an video input cable to the TV card:
I<Tuner> or I<Television> refer to input via antenna cable (also
known as RF cable, i.e. terrestrial reception or cable TV);
I<Composite> refers to a cinch video cable as used by satellite
receivers or cheap video records; I<S-Video> is an variant of Composite
with improved image quality (often wrongly called S-VHS cable since
it's mostly used by S-VHS video recorders) and easily recognized
by the Sub-D connectors (called "Hosidenstecker" in German).
Depending o your hardware you may only see a sub-set of these
input types, or additional ones (e.g. I<Radio>, which will obviously
not work as input for nxtvepg.)

Note if you don't choose a TV tuner as input nxtvepg will not be able
to automatically switch to your EPG provider's channel.
See also L<"DATA ACQUISITION">.

If you have more than one TV tuner card, you can also choose which
one to use, just like with the B<-card> command line option
(see L<"OPTIONS">)
The popup menu will list all card types as configured in the driver.
Note that changing the card may also affect the input selection,
in particular if the cards use a different ordering for input types.

The slicer quality option selects between different algorithms by which
teletext is extracted from the analog video signal.  The I<simple>
algorithm works only for excellent TV reception, but has the advantage
of using very little CPU resources.  The I<elaborate> algorithm
(copied from zapping's libzvbi and originally developed for the Linux
teletext viewer I<alevt>) is much more error tolerant.  When you select
I<automatic> acquisition will always start with the simple algorithmm
but switch to the elaborate one when the transmission error rate is
above recommended limits (see also
L<"STATISTICS: Teletext grabber statistics">).

B<Windows only:> at the bottom of the dialog window there are additional
options, which you only need to try if acquisition does not work
correctly.

If you experience data loss due to heavy system load, you can raise
the acquisition thread priority (may require special privileges on
certain Windows versions.)  Default is I<normal>, i.e. the same as
for all user applications.

The second checkbutton allows to enable logging during driver startup and
shutdown. The output is appended to a file named I<dsdrv.log> in the
nxtvepg working directory.  Enable this option if you're not able to
start the driver and cannot find out why.  But first see the explanation
of driver error messages in the README file.  Note that the logging
option is not remembered across program starts, i.e. to make use of it
you have to enable the acquisition via the Control menu and not by
restarting nxtvepg.

The third option currently only applies to CX23881 based cards: it
allows to disable a vendor's WDM driver for the same card.  This is a
work-around for the fact that CX23881 WDM drivers are known to access
the TV card even while no application is using them.  You should only
use it as a last resort, i.e. when you can't get the card to work
at all.  It's still an experimental feature, some users have reported
that their card configuration was lost or WDM drivers remained
disabled even after nxtvepg was stopped (in both cases other applications
will probably not work properly anymore.) You can verify if the WDM
drivers are cause of acquisition problems by de-installing them,
rebooting and then trying nxtvepg again (note nxtvepg doesn't require
any vendor supplied drivers.)  


=head2 Client/Server

Opens a dialog that allows configuring the connection between browser and
an EPG acquisition daemon (i.e. a separate instance of nxtvepg which is
running in server mode, see the I<-daemon> command line switch in L<"OPTIONS">).
The daemon forwards newly acquired EPG data to all connected browsers
and allows monitoring the acquisition progress.

The dialog contains settings of which some refer to the server-side only,
some to the client-side only and some to both server and client.  To avoid
confusion, there are three radio buttons at the top of the dialog which
allow greying out items that do not apply to the client or server
respectively (the button selection does not otherwise affect the result
of configuration). Note: for server configuration changes to take effect, the
daemon must be restarted.  If it's running locally, you can do this via
the Control menu (see L<"CONTROL: Connect to acq. daemon">)

=over 8

=item I<Enable remote control>

Note: this feature is not yet implemented.
By enabling remote-control you can stop acquisition, change acquisition
mode, TV card parameters or any parameters configured by this dialog
in a running daemon via the network connection.

=item I<Enable TCP/IP>

By enabling connections via the TCP/IP network protocol, you allow
connections from remote hosts.  Since there's currently no access
control in nxtvepg, these hosts can be anywhere in your network,
or anywhere in the world if you're connected to the Internet. If
you don't have a firewall which prevents incoming connections of
untrusted hosts, this mode is highly depreciated, because nxtvepg
is not in any way secured against malicious client connections.

Note: on Windows currently only TCP/IP is supported, i.e. you have
to enable this option if you want to start the daemon.

=item I<Server hostname>

Client-side only: this setting identifies the host on which the daemon
is running. You can enter either a hostname in "dot.com" format or
an IP address in "127.0.0.1" format.  If you set it to I<localhost> the
connection is automatically established via UNIX domain sockets (i.e.
pipes), which is more efficient than TCP/IP.  You can still use TCP/IP
locally if you set it to the name of your local host, as returned
by hostname(1).

=item I<Server TCP port>

If TCP/IP is enabled, this setting tells server and client which port
to use. You can enter an arbitrary number between 1024 and 65535 here,
but you have to make sure no other server is using the same port.
Make sure you configure the same port number for client and server.
The default is 7658.

=item I<Bind IP address>

If TCP/IP is enabled and your server host has more than one IP address,
you can select here on which one to listen for incoming connections.
Make sure you use the same IP address as server hostname on client-side,
or a hostname that resolves to that IP address.  This setting is optional;
if you leave the field blank (default) the server will bind to all
IP addresses.

Note: on systems that support it, TCP/IP sockets are created in the
IPv6 domain (I<PF_INET6>) by default.  On some systems (e.g. NetBSD)
you cannot connect via IPv4 to an IPv6 server and vice versa, i.e. you
need to use the same domain on both ends.  If your client only supports
IPv4, you can force your server to create an IPv4 socket by binding to
an IPv4 address.  If you fail to connect to a local IPv6 server via
the IPv4 loopback address 127.0.0.1, use the IPv6 equivalent "::1".

=item I<Max. connections>

This setting limits the number of client connections the server will
allow.  Once the limit is reached the server will reject further
connection attempts.

=item I<Log filename>

If you enable log generation by the following option, you can choose
here where the log will go. Make sure the file is writable to the uid
under which the daemon process is running.  The file opened and closed
for each appended log line (usually there's very low traffic into that
file) so you can operate on it (e.g. truncate it) without restarting
the daemon.

=item I<File min. log level>

Here you can choose if log information should be written to a file.
If you run nxtvepg with TCP/IP disabled, you don't need to use logging;
but if you allow remote connections you should keep log files at
"info" level to be able to check which hosts connect to your server.

The following settings are available: "no logging" disables logging;
"error" enables logging of internal errors that lead to an immediate
exit of the daemon; "warning" additionally enables logging of
unexpected events, i.e. internal errors which do not lead to exit;
"notice" additionally enables logging of server status changes,
i.e. startup and shutdown; "info" additionally enables logging of
connection establishment or shutdown. 

=item I<Syslog min. level>

Here you can enable or disable logging to UNIX syslog and Windows
application event logging (application name is I<nxtvepg daemon>;
this feature is not supported by Windows 95).
See UNIX man pages I<syslogd(8)> and I<syslog.conf(5)> or the Windows
event log help for details about the syslog facility. The log levels
you can choose here are the same as described in the previous paragraph
for logging to files.

=back

Note that while network mode is enabled configuration of acquisition
mode and TV card input has no effect and no EPG scan is possible.
If you use the same rc/ini file for daemon and GUI the changed settings
will however be used by the daemon upon the next start.


=head2 TV application interaction

Opens a dialog that allows to configure the interaction between a
TV application and nxtvepg.
You should at least configure your TV application type
and path here if you're using one of the supported applications; this
is a recommended step during the initial installation to speed up
the EPG provider search, as described in L<"GETTING STARTED">.

The first four (only three on UNIX) options allow to 
switch interaction features on or off. If you want to improve startup
time on UNIX, turn them all off; in this case nxtvepg does not need to
search for the I<xawtv> toplevel window (which can take up to several
seconds if you have many applications running or a slow connection to
your X server.) By default all interaction features are enabled.

=over 4

=item I<General enable>

Windows only: the option allows to disable or
re-enable the allocation of communication resources, and implicitly
to switch off or on all interaction features. While disabled, nxtvepg
will be invisible for the TV application.  The use of this option is
depreciated, as nxtvepg won't automatically free the driver when the
TV application is started, and nxtvepg will fail to start acquisition
when a TV appliaction is running.  Use this option only if you suspect
compatibility problems between the TV app and nxtvepg, e.g.  if one
application hangs or crashes during startup if the other is already
running. (Not that such behavior is to be expected, but it's better
to be prepared for anything.)

=item I<Tune TV button>

This option hides or shows the equally named button below
clock in the nxtvepg main window.  If you're not interested in
remote-controlling the TV application, switch it off.

Note the button has a little context menu which opens with right
mouse button.  It contains several remote controls; which one actually
work depends on the TV application.

=item I<Cursor follows channel changes>

While this option is enabled,
nxtvepg will monitor TV channel changes. Whenever such a change is
detected, the cursor in the programme listbox will be set onto the
title currently running on that network. During EPG acquisition VPS/PDC
is used to exactly determine the current programme (only on networks
which support VPS/PDC); however if the nominal running time is in the
past it's currently not possible to display the programme in the
listbox. This info may however be sent to the TV app (see next option).

If you have just a network filter enabled, it will be switched to the
new network so that you'll get a complete listing of that network's
programmes, starting with the currently running one. This works even
when you have excluded this network in the network selection configuration.
If there are more or other filters than network enabled, then they will
remain unchanged. If the current programme on the new network does not
match this filter setting, then neither cursor nor listbox content will
be changed.

=item I<Display EPG info in TV app>

While this option is enabled,
nxtvepg will monitor TV channel changes. During EPG acquisition
VPS/PDC are also monitored to determine newly starting programmes.
VPS/PDC also allows to detect channel changes on an external input
source, e.g. a satellite receiver connected via the Composite socket.

After a change of channel or current programme title, the info about
the currently running title will be displayed in the TV application.
On Windows it's entirely up to the TV application how this information
is displayed.

On UNIX the display format can be selected by the following radio buttons:

With I<Separate popup> nxtvepg will generate a small popup window and
put it right beneath the xawtv window. The blue area in the small bar
on top represents how much of the (nominal) running time lies in the past.
With I<Video overlay> nxtvepg will generate a similar popup, however it's
placed on top of the video image (please note that this option only works
properly with XFree86 version 4 and the XVideo extension; use the B<xvinfo>
command to check if your server supports this feature).  You can change
fonts and colors in this popup via X resources (see L<"FILES"> for details.)
I<Video overlay, 2 lines> is the same except that it writes running time
and title in separate lines and additionally contains the percentage of
expired running time.
With I<Xawtv window title> the info will be sent to xawtv and displayed
in the window title. Except for this last option, you can configure the
desired display duration with the slider at the bottom of the dialog.
A duration of zero means the display will never be removed.
Finally, with I<Use external application> an arbitrary external
application can be invoked to display the information. Title and runtime
information can be passed on the command line, in the same way as for
external commands in the context menu
(see L<"CONFIGURATION">, section "Context menu configuration")

=back

In the middle of the dialog there's one line that
indicates the current TV application connection status.  It contains
the name of the connected application, or I<not connected> either if
no TV application is running or if it doesn't support interaction with
nxtvepg (see also L<"GETTING STARTED: Configuring a TV application">.)
You can connect to different applications than configured below, but if
the network names are not synchronized with nxtvepg, the interaction
will not work optimally (i.e. nxtvepg might not be able to identify
all networks, and hence not be able to provide programme titles).


In the lower part of the dialog window you can configure
type and path of your preferred TV application.  This information
is used to access the TV app's channel table (i.e. TV tuner frequencies
and station names) during an EPG provider scan
(see L<"CONFIGURATION">, section "TV channel scan") and in the network name
configuration dialog (see L<"CONFIGURATION">, section "Network names").

After you've changed the setting, you can press the I<Test> button to
check if nxtvepg can parse the channel table correctly. It will complain
if it fails to open the file or registry key and if no channels are found.
After the test was successful, you shoud open the network names
configuration dialog and synchronize network names with nxtvepg.

If your TV application is not supported, choose I<none>.  (If it's a
freeware application feel free to mail me a download URL and I will
consider supporting it.  However I will not support proprietary
closed-source software, unless on request by the author.)

Note that not all of the TV applications listed in the popup menu can
currently interact with nxtvepg.  The interaction requires modifications
in the TV applications; it's up to the respective authors if they want
to implement these. (If you are an author of a TV app, feel free to mail
me if you want to add EPG support to your application; a demo application
and reference implementation source code are available on the nxtvepg
home page.)


=head2 Select attributes

Open the programme attribute display configuration dialog, which allows
to select which attributes are displayed for the listed TV programmes.
In the listbox on the left of the dialog window there's a list of all
available attribute categories, e.g. title, running time, weekday,
TV network name, ratings, ... i.e. mostly the same which are available
for filtering.  You can create your own attributes to extend this list
with the dialog described in the next chapter.

The listbox on the right contains the types currently selected for
display.  The topmost entry appears on the left side of the listbox.
Press I<Apply> to refresh the browser listbox with the new column
selection and save the new configuration to the config file.

In the "single list" layout (see L<"CONFIGURATION">, section "List layout") each
attribute has it's own column in the TV schedule and and associated
filter menu in the button on top of the column (provided column headers
have not been disabled, see L<"CONFIGURATION">, section "Show/Hide".)  You can
change the width of each column by moving the mouse pointer to the
very right of the menu button and then dragging the border to a new
position while keeping the left mouse button pressed down.

In the "spearate network columns" layout attributes are printed beneath
each other in separate lines in the TV schedule's network columns, unless
you select I<No new line after element> while the respective attribute
is selected in the right listbox. Empty rows are automatically suppressed,
e.g. in contrary to the "single list" layout the number of attributes actually
displayed may vary.  This is particularily useful for user-defined
attributes, e.g. you could specify that theme categories are only
printed for movies to keep the listing more compact.


=head2 Attribute composition

Open the configuration dialog for I<composite attributes>, which allows
to create new column types for the "single list" TV schedule layout
(see L<"CONFIGURATION">, section "List layout") or new rows respectively
in the "spearate network columns" layout, which can afterwards be
selected in addition to the predefined attribute types (e.g. "Title"
and "Theme") as described in the previous chapter.

For a general description of composite attributes see
L<"COMPOSITE ATTRIBUTES">.  This chapter only describes usage
of the configuration dialog.  This chapter also assumes you're familiar
with the concept of filter shortcuts (see L<"FILTER SHORTCUTS">) and
reminders (see L<"REMINDERS">)

The dialog consists of three sections: at the top to the right there is a
drop-down menu which lists all currently defined composite attributes. Here you
select which attribute definition you want to edit.  Below to the left is a
list of shortcuts and reminder groups and 4 buttons to edit the list.  On
the right side of the shortcut list there are various controls for defining
how programmes matching shortcuts or reminder groups should be displayed.

Note that there are dependencies between those sections: when you change
to a different attribute definition with the drop-down menu at the top,
the rest of the dialog is immediately updated to display the current
definition of the composite attribute (you'll get a warning if there any
unsaved changes in the previous assignments).  Also, when you select a
shortcut in the listbox, the display attributes at the right are updated.

To create a new composite attribute, you will start by selecting the
I<Create new definition> command in the menu at the top right of the dialog
window. You should give the label right away, so that you can keep your
definitions apart, see L<"CONFIGURATION">, section "Select attributes".
You should also assign a column header text (only used in the "single list"
layout), which will appear above the programme list in the main windiw;
you'll probably use a shorter text here than in the label.

Then you add one or more filters to the list by use of the I<Add shortcut>
or I<Add reminder>
drop-down menus to the left of the listbox. New entries are always appended
at the end of the list, but you can change the ordering by use of the
up/down arrow buttons.  To remove a shortcut or reminder group from the list,
first select it then click the I<Delete> button or key.  Note: ordering is
important when a programme is matched by more than one shortcut, or if you
mix shortcuts with reminder groups, because the display format will be
determined by the first matching entry in the list, strting at the top
(see also L<"COMPOSITE ATTRIBUTES">.)

At the right of the shortcut list there are controls which defines what's
displayed in the programme list depending on a shortcut or reminder match
(for programmes which don't match any of the given shortcuts nothing will
be displayed, unless you have a I<*no match*> entry.)
By default a match is displayed as the name of the matching shortcut or
reminder group, but you can easily change that with the controls to
the right of the listbox.  The choices are: freely defined but static
text, one of the pre-defined images or one of the programme's attributes
(i.e. if you select I<Time> the programme's start time will be displayed).

In case you chose to use text (including attributes), you can select
bold, underlined or overstrike font and the text color.  For all types
you can also select a background color.  Colors can be applied either
just to the user-defined attribute itself, or the entire column
(in single list layout; or the entire element in grid layout)
The resulting appearance is shown in a B<Text sample>
above the controls.  These display options can be configured separately
for every shortcut match.  An exception is the entire-column background
color; if such a format is found in multiple attributes, the last one
counts.

When you want to try out your attribute definition, press the I<Apply>
button at the bottom.  The definition is saved and the browser content
is updated.  If the attribute is not currently used in the browser,
you're offered in a popup message to automatically append the attribute
to the TV schedule.  You can later change it's position by using
the I<Select attributes> configuration dialog.

There's also a I<Delete> button at the bottom which allows to remove
obsolete definitions.  If the composite attribute is still displayed in
the browser, it's automatically removed.  Note that a deletion cannot be
undone, i.e. the information is lost irrecoverably.


=head2 Select networks

Open the network selection dialog. It allows to permanently suppress
TV networks in a provider's listing, e.g. if you can not receive the
channel. You can also change the order of the networks, e.g. to put
your favorite networks at the top of the filter menus.

This window has two lists: on the left you'll find all networks that are
covered by the provider in their original order, on the right those that
are selected for the programme listing in your preferred order. By default,
both lists will have exactly the same content. If you want to exclude
networks, select them in the right list and press I<Delete>. You can always
include them again by selecting them in the left list and pressing I<Add>.
You can change the order in the right list by selecting one or more networks
and pressing the I<up> or I<down> arrows.

At the bottom of the dialog window there's an entry field named
B<Air times> that allows to limit the program listing for a network
to a given time frame. For example if you receive I<Arte> only from
19:00 until 07:00 o'clock, select "Arte" either
in the left or right list, then enter "19:00" and "07:00" in the fields
(make sure to always use 4 digits and the separating colon).  Programmes
that fall completely outside that window will not appear in the browser
window.  If you want to undo the limitation, enter 00:00 until 00:00
or any other equal time values.

Note: you can also operate this dialog (and all other dialogs with similar
listbox selections) with he keyboard: use the TAB key or the mouse to move
the keyboard input focus to the left or right listbox. Use the cursor
up/down keys to select an item; hold down SHIFT to select multiple items.
In the left list, press Return to add a network to the right list. In the
right list, press the Delete key to remove a network, or press CONTROL
and the up/down cursor keys to change the selected items' position in
the list.


=head2 Network names

Open the network names configuration dialog. Its main purpose is
synchronizing network names between nxtvepg and your TV application.
This is required because the network name is used in communication when
you use the I<Tune TV> remote controls, and as well for channel change
notifications by the TV applications.  For many networks there will be
no need to change anything, but for some there exist different variants,
e.g. in Germany "Super RTL" vs. "S-RTL" or "MDR3" vs. "MDR".

Initially, you need to select which TV application
you want to synchronize with and where the configuration files are
located.  This is done in the I<TV app. interaction> dialog in the Configure
menu (see L<"CONFIGURATION">, section "TV application interaction").

Another use of this dialog is to make network naming consistent across
all XMLTV EPG providers. The names you specify here will be used in the
programme listbox and all filter menus, independently of the provider.

On the left side of the dialog you find a list of all networks used in the
currently loaded or merged XMLTV files. The names used here
are the ones you configured before, or if you haven't done so yet, the
names that match the station names of your TV application best. Unmatched
names are marked red.  If no TV application is configured, the network
names used by your currently selected EPG provider are kept unchanged.

On the right side, you're offered four ways to change the name: Topmost
is a simple entry field where you can type in an arbitrary name. Below
is a popup menu which contains all network names defined in your TV app.'s
channel table.  Below is a button which contains the one name in your
TV app.'s channel table which resembles the current string in the entry
field most, or I<none>. It's marked red
until it's identical to the entry field. You can copy the name to the
entry field by clicking the button. Below is a listbox with the original
names used in the various provider databases. When you select a name from
the menu or the listbox, it will be copied into the entry field and the
network name list on the left. If you want to save the changed list,
leave the dialog with I<Save>, else use I<Abort>.

B<Note:> If you receive channels that carry multiple networks, e.g.
in Germany "Arte / Kinderkanal", it's recommended to include all
networks' names in the network name on side of the TV application,
separated by a slash.  The slash is recognized as separator by nxtvepg
and all resulting segments can be used as network names.


=head2 Context menu configuration

Open the context menu configuration dialog which allows to change the
order of automatically generated menu entries or to extend the popup
menu with user-defined external commands (for a general description of
the context menu see L<"CONTEXT MENU">).

At the top of the dialog window there's a list of titles of all
currently defined menu items.  When you open the dialog for the
first time, you'll see only pre-defined "pseudo commands" (such as
"Add programme filters".)  These don't show up like that in the context
menu, they just represent menu commands which are automatically
inserted in their place at run-time, depending on the currently
selected programme entries and current filter settings (e.g. to add
a filter for the network of the curently selected programme.)

As usual, you can change the ordering of items in the list by selecting
an item and then clicking the buttons with up/down arrows.
To remove an entry, select
it and press I<Delete>.  If you make an error you can leave the dialog
with I<Abort>; changes aren't applied and saved until you leave the
dialog with I<Ok>.

The I<Add new> menu button allows to insert a new menu item below the
currently selected one:

=over 4

=item B<External command>

Start an external application with the given command line parameters.
This is equivalent to typing a command into a UNIX shell or using
I<Run command> in the Windows Start menu.  Command line parameters
may use variable substitution as described below.  To allow sharing
the same nxtvepg configuration file on UNIX and Windows, there are
different types, i.e. UNIX or Windows.  Commands are only included
in the context menu if the platform matches the command type.

The dialog's entry field labeled B<Title> defines the text which will
be included to the popup menu.  The field labeled B<Command> defines the
command line

=item B<TV application remote command>

Send the given command line to an attached TV application, e.g. to
switch TV channels.  Variable substitution can be used here, too.
How the command is sent depends on the TV application; when no TV app.
is connected, such entries are automatically disabled
(see also L<"CONFIGURATION">, section "TV application interaction")
For example

  setstation ${network}

would create a command that switches the TV app's channel to that of
the currently selected programme (i.e. the same what the I<Tune TV>
button does).  You should refer to the documentation of your TV app
to see which commands it supports.

=item B<Menu title> and B<Menu separator>

These can be used to organize the menu contents into groups.
In case of menu titles, the dialog's entry field labeled B<Title>
defines the text which will be included to the popup menu.

=item B<Add/Undo programme filters>

This menu entry will be replaced by automatically generated commands
to manipulate filter settings. See L<"CONTEXT MENU"> for details.

=item B<Add/remove reminder>

This menu entry will be replaced by automatically generated commands
to manipulate the reminder list. There are two versions of the entry:
if you select the extended version, an additional entry will be
included which allows to select reminder groups (only useful if you're
using multiple groups, see also L<"REMINDERS">.)

=back

When you press the menu button I<Add Example> a list pops up which
contains a few example commands which can be copied into the title and
command entry fields.

As mentioned above, external commands and TV app. remote commands allow
to include placeholders enclosed in ${} which are replaced by attributes
of the programme selected in the browser listbox at the time the context
menu command is invoked.  The following is a list of such formal variables
The meaning of the variables should be self-explanatory, except possibly
for CNI: this is a hexadecimal network code, and e/p_rating: these are
editorial and parental ratings respectively.

  ${title}
  ${network}
  ${start}
  ${stop}
  ${relstart}
  ${duration}
  ${CNI}
  ${description}
  ${themes}
  ${VPS}  or  ${PDC}
  ${e_rating}
  ${p_rating}
  ${sound}
  ${format}
  ${digital}
  ${encrypted}
  ${live}
  ${repeat}
  ${subtitle}

Start and stop time related keywords can optionally be followed by either
a plus or minus sign and a time offset.  The offset value is assumed to be
given as minutes.  For relstart and duration the precision can be changed
by means of the format (see below.)  Example: to print the start time
minus 5 minutes (e.g. to start a recording 5 minutes earlier)
use C<${start-5:%H:%M}>

The keywords can optionally be followed by a colon and an output format
specification.  Options depend on the type of variable substitution:

=over 4

=item I<Start, stop and VPS/PDC times>

All options defined in the B<strftime(3)> manpage are available;
default is %H:%M-%d.%m.%Y (hour, minute, day, month, year).

=item I<Relative start time and duration>

You can choose between minutes (default) and seconds by appending "m" or "s".

=item I<Theme categories>

You can choose between numerical and textual output by appending "n" or "t".
Use command line option I<-dump pdc> to get a list of theme categories
(see L<"OPTIONS">.)

=back

For all other variables modifiers are currently ignored.

On UNIX the resulting substrings which replace the formal variables are
always enclosed in single quotes, because the command line is passed
to a system shell for execution (/bin/sh, i.e. the I<Bourne Shell> by means
of the I<system> function; see also system man pages B<sh> or B<bash>)
and there are many characters with special meaning.  Single quotes inside
of the substituted string are correctly escaped.

Example: The command line

  plan ${start:%d.%m.%Y %H:%M} ${title}

could for example on UNIX systems result in

  plan '22.08.2001 13:05' 'Fish '\''n'\'' Fun'

On Windows only single- and double quotes and space characters are
escaped with a backslash. Hence the above example would result in:

  plan 22.08.2001\ 13:05 Fish\ \'n\'\ Fun

Note if you want to prevent the backslash inbetween date and time (if
the called program doesn't understand it), you can simply use two
separate substitutions for date and time. Example:

  plan ${start:%d.%m.%Y} ${start:%H:%M} ${title}



=head2 Themes language

Select the language for programme themes (i.e. content category, see
L<"FILTERING">) in the main window and the filter menu.  By default
it's set to I<automatic>; in this case the language is derived from the
selected provider's database.  Please note that the language of the
menus, help etc. currently can not be changed from English.


=head2 Show/Hide

Toggle visibility of various components in the main window:

=over 4

=item I<Show shortcuts>

Toggle visibility of the shortcut listbox at the left of the programme list.
When you unmap both the shortcuts list and the network list below, the clock
and reset buttons are also unmapped so that you get only the programme list.

=item I<Show networks (left)>

Maps or unmaps the network filter listbox below the shortcuts list,
or below the clock if you've unmapped the shortcuts list.

=item I<Show networks (middle)>

Maps or unmaps the network filter listbox between shortcuts listbox and
programme list.  

=item I<Show layout button>

Maps or unmaps the I<Grid layout> checkbutton below the shortcuts or
network list in the main window (see also L<"CONFIGURATION">, section "List layout").
If you're permanently using one or the other layout, you will probably
want to unmap this button.  (It's mainly present to make users who
upgrade from older versions aware of this new option.)

=item I<Show status line>

Maps or unmaps the database and acquisition status line at the bottom
of the browser window.

=item I<Show column headers>

Maps or unmaps the browser listbox column header menubar, i.e. the row
of menu buttons above the programme list in single list layout.

=item I<Show weekday scale>

Maps or unmaps the weekday scale to the right of the programme list.
(Note you can configure the looks, i.e. font, colors, width and date
format via the resource file C<nxtvepg.ad> or C<.Xdefaults> on UNIX,
see L<"FILES">)

=item I<Hide on minimize>

Windows only:
When this option is enabled, the main window's entry in the task bar
is removed when it's minimized or when the program is started with
the I<-iconic> command line switch.  Instead an icon is added to the
system tray in the task bar.  A double-click on the tray icon deiconifies
the main window.  A click with the right mouse button opens a little
popup menu.  The entries in this menu have the same meaning as the
equally named ones in the control menu (see L<"CONTROL">).

=back


=head2 List layout

Select layout of the programme list in the main window:

=over 4

=item I<Single list for all networks>

This is the original layout (the only layout until nxtvepg version 2.4)
in which all programmes of all networks are presented in a single list,
sorted by start time.

=item I<Separate columns for each network>

In this layout programmes are still sorted by start time, but presented
in separate columns for each network.  Schedules of different networks
are aligned, so that programmes which run at the same time are approximately
at the same height.

You can join several columns in a single column via the I<Control>
menu (meant for networks which share the same channel; use this in
conjunction with I<air times restriction> as described in
L<"CONFIGURATION">, section "Select networks".)  The control menu is part of the
drop-down menu below the button at the top of the column.  This menu also
holds commands to increase or decrease the number of visible columns.

=back

In both layouts you can select which types of attributes are printed
for each programme by clicking on the icon in the button row at the top
of the list (unless column header buttons are hidden.)


=head1 FILES

=head2 Files used on UNIX systems

=over 4

=item B<$HOME/.config/nxtvepg/nxtvepgrc>

Default for the configuration file where all personal settings are stored.
Note a different path and file name can be specified with the
B<-rcfile> option (see L<"OPTIONS">).


=item B<$HOME/.cache/nxtvepg/>

Directory path containing one file for each network from which Teletext
EPG is grabbed.  The directory can be changed with the B<-dbdir> command
line option (see L<"OPTIONS">).

Files written by the Teletext EPG grabber have names in format
F<ttx-SID.xml>, where "SID" is the DVB service ID taken from the respective
channel's entry in file C<channels.conf>. (The SID is used instead of the
clear-text channel name so that the file remains accessible across name
changes.) The file content is in XMLTV schema. A separate file is created
for each channel from which data is grabbed.


=item B</dev/dvb/adapter0/frontend0>, B</dev/dvb/adapter0/demux0>

Device files from which teletext data is being captured
during acquisition when a Digital TV (DVB) device is selected in the
TV card configuration dialog. The first device file is used for tuning and
the second for receiving data streams. The adapter directory postfix can
be specified with the B<-card> command line option (see L<"OPTIONS">).


=item B</dev/vbi0>, B</dev/vbi1>, etc.

Device files from which teletext data is being read during acquisition
when an analog TV capture card is selected. The device index postfix can
be specified with the B<-card> command line option (see L<"OPTIONS">).

You must have read/write access to these files; by default this is not
the case for many Linux distributions for security reasons (since you
might have connected a WebCam and mike and someone could spy on you from
remote).  However on a single-user system it's safe to make them
world-readable and writable, i.e. in a root shell enter:

  chmod 666 /dev/vbi

Alternatively you can make yourself a member of a group in F</etc/groups>
which has access to the devices or create such a group.


=item B</dev/video0>, B</dev/video1>, etc.

On Linux kernel series 2.4 and earlier (i.e. before revision #2 of the
video4linux API) these device files
are used to select the input source (e.g. TV tuner or one of
the composite or S-Video sockets) and tuner frequency for VBI reception,
unless you choose the passive acquisition mode. The index postfix can be
specified with the B<-card> command line option. This device must be
readable and writable.

The device is only kept open during a provider search
(see L<"CONFIGURATION">, section "TV channel scan").  Else, it's just
opened shortly to set the input source and tuner frequency. If the device
is busy (e.g. while you watch TV), acquisition starts on the currently
selected channel and automatically follows any externally controlled
changes (this will be reported, e.g. in the status line at the bottom
of the browser window, as I<forced passive> acquisition mode, see
L<"STATISTICS: Status line">).

Note: it's mandatory that the video device has the same index as the
VBI device.  If you have a video device at index 0 which does not
support teletext (a webcam, for example) the VBI device belonging to
video device #1 may appear at index 0.  You should force the driver
to assign device index #1 to the VBI index.  On Linux this is possible
by using I<insmod> parameters in I</etc/modules.conf>, e.g. for bttv:

   options bttv video_nr=1 vbi_nr=1


=item B</dev/v4l/vbi0>, B</dev/v4l/video0>

If you have enabled I<devfs> in your Linux kernel, the VBI and video
devices will appear in a subdirectory.  nxtvepg automatically detects
the existance of this directory and will search the devices there
instead of the regular paths.

=item B</tmp/.vbi0.pid>, B</tmp/.vbi1.pid>, etc.

This file contains the PID of the nxtvepg process (or the
acquisition slave process unless threading is used) whenever a VBI device
is kept open. The process can be forced to free the device by sending
it signal I<SIGHUP>, e.g. from a wrapper script around a teletext decoder.
An example which works with all shells:

   kill -HUP `cat /tmp/.vbi0.pid`

Note that the daemon is not kept alive when acquisition is disabled,
so that sending HUP to the daemon equals sending TERM.  You can restart
acquisition by starting a new daemon.  The browser attempts to reconnect
every 10 seconds when the connection was broken, but you can also trigger
an immediate reconnect be sending the GUI process SIGHUP.

To restart acquisition in non-daemon mode, signal again with SIGHUP,
either to the acquisition slave process or the browser process.


=item B</tmp/nxtvepg.0>

This non-regular file (socket) is created by the daemon to allow
local client connections via UNIX domain sockets.  The same socket
can be used for more than one client connection.  It's deleted when
the daemon terminates (unless the daemon crashes or receives an
uncatchable signal like the infamous signal 9 aka KILL).
See also L<"CONTROL: Connect to acq. daemon">.


=item B<.../channels.conf>

DVB only:
The Teletext EPG grabber requires a channel table which contains a
TV channel table, indicating names, frequencies and the PID of the
teletext data stream. nxtvepg does not create such files; you need to
use an external DVB channel scan application such as B<w_scan> for
that and point nxtvepg to use its output. Currently, nxtvepg supports
the format used by VDR and the format shared by I<mplayer>, I<Kaffeine>,
I<xine>, I<Totem> and others.
See also L<"CONFIGURATION">, section "TV application interaction".


=item B<$HOME/.Xdefaults>

This file is usually loaded into the X server at startup (or during
login) by use of the F<xrdb> command.  It contains a series of parameter
assignments called I<X resource definitions> for any number of applications.
Note: depending on your X11 startup scripts this file may have a different name,
e.g. F<.Xresources>.  The file could be used to change the "look" of almost
every element in every dialog window (within limits, because some options
are hard-coded) or the look of entire widget classes, like menus or buttons.
However that's highly implementation dependent and generally not very useful,
hence depreciated.

Defaults for all officially supported options are listed in the
so-called "app-defaults" file F<Nxtvepg.ad> which is usually installed
in F</usr/X11/lib/X11/app-defaults> (the .ad extension is omitted during
installation.)  You should not change values there however, because they
would be overwritten when you install new versions.  Instead copy changed
lines into your .Xdefaults file (without the leading comment ! sign.)
Note you have to restart nxtvepg for changes to take effect.  When X11 is
already running you can override individual settings with xrdb like this:

   echo "nxtvepg*text_bg: #E9E9EC" | xrdb -merge

Color values can specified either symbolically (e.g. "red") or as hexadecimal
RGB values in #RRGGBB format.  A special case are the 7 colors for weekday
background colors in the main window's date scale: it's resource value
consists of a comma separated list of 7 colors.

Fonts must be specified as triplets of family,
size (use negative values to specify the size in pixels and positive values
for sizes given in points) and appearance (only "normal" or "bold" are
recommended).  Lines starting with a ! sign are treated as comment and hence
ignored.  Entries that do not adhere to this syntax are silently discarded.

=back


=head2 Files used on Windows systems

=over 4

=item B<nxtvepg.ini>

Configuration file where all configuration and personal preference settings
are stored. By default this is created in the working directory, but a
different path and file name can be specified with the B<-rcfile> option
(see L<"OPTIONS">).

=item B<Nxtvepg.ad>

Allows to change the application's appearance, i.e. colors and text fonts.
The format and content of the file is identical to the F<.Xdefaults> file
described in the UNIX section.

=item B<ttx-SID.xml>

Files written by the Teletext EPG grabber have names in format
F<ttx-SID.xml>, where "SID" is the DVB service ID taken from the respective
channel's entry in file C<channels.conf>. (The SID is used instead of the
clear-text channel name so that the file remains accessible across name
changes.) The file content is in XMLTV schema. A separate file is created
for each channel from which data is grabbed.

=item B<vbi_map.dat>

This hidden file is used to set up shared memory to allow information
exchange between nxtvepg and an attached TV application.  It's
automatically removed when nxtvepg terminates and should never be
accessed (i.e. being written to or removed) by external applications.
The file is not created when TV app. interaction is disabled (see
L<"CONFIGURATION">, section "TV application interaction").

=back


=head1 AUTHOR

T. Zoerner
C<tomzo (at) users (dot) sourceforge (dot) net>

The best way to provide feedback is via the discussion forum at the
nxtvepg homepage. Please see the README file for instructions about the
information that must be included in a bug report (for example, a bug
reporting only "feature does not work" will not suffice.)

Many thanks
to NE<eacute>o for providing the MS windows installer, the K!TV instruction
manual and for the French translation of several web pages;
to Kurt Lettmaier for his valuable feed-back and suggestions;
to Kurt Lettmaier and Olaf Noehring for the German translation of the manual;
to Thierry ME<eacute>nE<eacute>trier and Peter Rolf for their valuable feedback and suggestions;
to Simon Barner for the FreeBSD port;
to Matthieu for the French translation of PDC theme descriptors;
to E-nek for the DScaler driver port and cooperation
in develepment of the TV application interaction;
to John Adcock for the DScaler driver;
to Jan Schuster for beta testing nxtvepg 0.7.0;
to Mario Kemper for the NetBSD port and early beta testing;
to "Mario's brother" for beta testing the first Windows port;
to Gerd Knorr for xawtv and maintaining the Debian and SuSE nxtvepg packages;
to Ralph Metzler for his teletext decoder;
to Edgar Toernig for the Latin-1 conversion tables in alevt;
and last but not least to the authors of bttv and v4l for their excellent work,
and the authors of the Cygwin GNU and XFree86 port, without which nxtvepg
would never have been ported to M$ Windows.

Historical note:
Originally, B<nxtvepg> was developed as a decoder for the I<nexTView> EPG
as defined by the European Telecommunications Standards Institute
(ETSI) in ETS 300 707: "Protocol for a TV Guide using electronic data
transmission". Up to apx. 2012, B<nxtvepg> enabled you to obtain free
TV programme listings for all of the major networks in Germany, Austria,
France, Belgium and Switzerland.  However, Nextview EPG is not transmitted
via digital TV signals (i.e. DVB), as these use a different EPG standard
with similar features. Therefore this standard became obsolete once analog
TV transmission was switched off and has been removed from nxtvepg in
release 3.0.

=head1 COPYRIGHT

Copyright (C) 1999 - 2011, 2020 - 2021 by T. Zoerner.
All rights reserved.

Additional copyrights apply to portions of the code herein.
Please see file COPYRIGHT and source file headers for details.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License Version 2 as
published by the Free Software Foundation, e.g. at
L<http://www.fsf.org/>

This program is distributed in the hope that it will be useful, but
B<WITHOUT ANY WARRANTY>; without even the implied warranty of
merchantability or fitness for a particular purpose. See the
file F<COPYRIGHT> for more details.

